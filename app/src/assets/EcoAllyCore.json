{
  "contractName": "EcoAllyCore",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ecoAllyIndexToApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ecoAllyIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "ownerTokens",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ecoAllyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "ecoAllyDNA",
          "type": "uint256"
        }
      ],
      "name": "Creation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_v2Address",
          "type": "address"
        }
      ],
      "name": "setNewAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getEcoAlly",
      "outputs": [
        {
          "name": "dna",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getEcoAllyDnaOnly",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "addAlly",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "str",
          "type": "uint256"
        }
      ],
      "name": "randNum",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_str",
          "type": "string"
        }
      ],
      "name": "randDna",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferEcoAlly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610128576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461012d5780630a0f81681461017a5780630fcfcd25146101d157806318160ddd1461022057806323b872dd1461024b57806327d7874c146102b85780633d1749cc146102fb5780633e4bd727146103a85780633f4ba83a146104155780634a7650371461042c5780635998b700146104995780635c975abb146105065780636352211e146105355780636af04a57146105a257806370a08231146105f9578063715879881461065057806377cdae0a146106935780638456cb591461070e5780638462151c14610725578063a15dfe80146107bd578063a9059cbb146107fe578063b6e44a771461084b575b600080fd5b34801561013957600080fd5b50610178600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061088c565b005b34801561018657600080fd5b5061018f61096a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101dd57600080fd5b5061020a60048036038101908080359060200190820180359060200191909192939192939050505061098f565b6040518082815260200191505060405180910390f35b34801561022c57600080fd5b506102356109d4565b6040518082815260200191505060405180910390f35b34801561025757600080fd5b506102b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109e1565b005b3480156102c457600080fd5b506102f9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aae565b005b34801561030757600080fd5b5061032660048036038101908080359060200190929190505050610b88565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561036c578082015181840152602081019050610351565b50505050905090810190601f1680156103995780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b3480156103b457600080fd5b506103d360048036038101908080359060200190929190505050610c5f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042157600080fd5b5061042a610c92565b005b34801561043857600080fd5b5061045760048036038101908080359060200190929190505050610d6f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a557600080fd5b50610504600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da2565b005b34801561051257600080fd5b5061051b610db2565b604051808215151515815260200191505060405180910390f35b34801561054157600080fd5b5061056060048036038101908080359060200190929190505050610dc5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105ae57600080fd5b506105b7610e41565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561060557600080fd5b5061063a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e67565b6040518082815260200191505060405180910390f35b34801561065c57600080fd5b50610691600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610eb0565b005b34801561069f57600080fd5b506106cc600480360381019080803590602001908201803590602001919091929391929390505050610fcd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561071a57600080fd5b50610723611012565b005b34801561073157600080fd5b50610766600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110a6565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107a957808201518184015260208101905061078e565b505050509050019250505060405180910390f35b3480156107c957600080fd5b506107e8600480360381019080803590602001909291905050506111f3565b6040518082815260200191505060405180910390f35b34801561080a57600080fd5b50610849600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611259565b005b34801561085757600080fd5b5061087660048036038101908080359060200190929190505050611310565b6040518082815260200191505060405180910390f35b600060149054906101000a900460ff161515156108a857600080fd5b6108b2338261133f565b15156108bd57600080fd5b6108c781836113ab565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006109cc83838080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050611401565b905092915050565b6000600380549050905090565b600060149054906101000a900460ff161515156109fd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610a3957600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610a7457600080fd5b610a7e33826114c6565b1515610a8957600080fd5b610a93838261133f565b1515610a9e57600080fd5b610aa9838383611532565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b0957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b4557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060606000600384815481101515610b9d57fe5b906000526020600020906002020190508060000154925082816001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c4d5780601f10610c2257610100808354040283529160200191610c4d565b820191906000526020600020905b815481529060010190602001808311610c3057829003601f168201915b50505050509250829250925050915091565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ced57600080fd5b600060149054906101000a900460ff161515610d0857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d6557600080fd5b610d6d611734565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610dad838383611532565b505050565b600060149054906101000a900460ff1681565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610e3957600080fd5b809050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f0b57600080fd5b600060149054906101000a900460ff161515610f2657600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600061100a83838080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050506117c6565b905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561106d57600080fd5b600060149054906101000a900460ff1615151561108957600080fd5b6001600060146101000a81548160ff021916908315150217905550565b60606000606060008060006110ba87610e67565b945060008514156110fd5760006040519080825280602002602001820160405280156110f55781602001602082028038833980820191505090505b5095506111e9565b8460405190808252806020026020018201604052801561112c5781602001602082028038833980820191505090505b5093506111376109d4565b925060009150600090505b82811115156111e5578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156111d8578084838151811015156111c157fe5b906020019060200201818152505081806001019250505b8080600101915050611142565b8395505b5050505050919050565b60008133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040518091039020600190049050919050565b600060149054906101000a900460ff1615151561127557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112b157600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156112ec57600080fd5b6112f6338261133f565b151561130157600080fd5b61130c338383611532565b5050565b60008060038381548110151561132257fe5b906000526020600020906002020190508060000154915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008082336040518083805190602001908083835b60208310151561143b5780518252602082019150602081019050602083039250611416565b6001836020036101000a0380198251168184511680821785525050505050509050018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401925050506040518091039020600190049050600254818115156114bd57fe5b06915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151561169057600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055506006600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561178f57600080fd5b600060149054906101000a900460ff1615156117aa57600080fd5b60008060146101000a81548160ff021916908315150217905550565b60008060006117d484611401565b915060036040805190810160405280848152602001868152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101908051906020019061183e9291906118ff565b50505090507f0c42492e9a23edb18d7a10ab834f9871ecd80970bffc97312a8a1c05b88e807d338284604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a16118c260003383611532565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692505050919050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061194057805160ff191683800117855561196e565b8280016001018555821561196e579182015b8281111561196d578251825591602001919060010190611952565b5b50905061197b919061197f565b5090565b6119a191905b8082111561199d576000816000905550600101611985565b5090565b905600a165627a7a72305820e4b506e11f6e43a120e47acf0d5ffaf7d84f71009a761c7e1f8fd162fc12f5ec0029",
  "sourceMap": "262:3556:3:-;;;456:5:1;435:26;;;;;;;;;;;;;;;;;;;;668:2:2;651:19;;700:9;;694:2;:15;676:33;;1445:169:3;8:9:-1;5:2;;;30:1;27;20:12;5:2;1445:169:3;1511:4;1502:6;;:13;;;;;;;;;;;;;;;;;;1597:10;1584;;:23;;;;;;;;;;;;;;;;;;262:3556;;;;;;",
  "deployedSourceMap": "262:3556:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:366:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2765:366:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:25:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:106:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3577:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4061:90:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4061:90:4;;;;;;;;;;;;;;;;;;;;;;;3336:595;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3336:595:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;553:127:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;553:127:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2482:187:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2482:187:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2482:187:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1462:58:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1462:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3183:157:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3183:157:3;;;;;;1115:55:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1115:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3689:125:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3689:125:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:26:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;435:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:187:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1679:187:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:33:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1337:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:122:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1434:122:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:161:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2067:161:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;3346:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3346:108:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:78:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;830:78:1;;;;;;4614:877:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4614:877:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4614:877:4;;;;;;;;;;;;;;;;;3460:112:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3460:112:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2037:517:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2037:517:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2675:150:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2675:150:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:366:4;729:6:1;;;;;;;;;;;728:7;720:16;;;;;;;;2907:27:4;2913:10;2925:8;2907:5;:27::i;:::-;2899:36;;;;;;;;3014:23;3023:8;3033:3;3014:8;:23::i;:::-;3089:35;3098:10;3110:3;3115:8;3089:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:366;;:::o;348:25:1:-;;;;;;;;;;;;;:::o;3577:106:3:-;3630:4;3652:24;3671:4;;3652:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:24::i;:::-;3645:31;;3577:106;;;;:::o;4061:90:4:-;4105:4;4128:9;:16;;;;4121:23;;4061:90;:::o;3336:595::-;729:6:1;;;;;;;;;;;728:7;720:16;;;;;;;;3530:1:4;3515:17;;:3;:17;;;;3507:26;;;;;;;;3643:4;3628:20;;:3;:20;;;;3620:29;;;;;;;;3717:34;3730:10;3742:8;3717:12;:34::i;:::-;3709:43;;;;;;;;3770:22;3776:5;3783:8;3770:5;:22::i;:::-;3762:31;;;;;;;;3893;3903:5;3910:3;3915:8;3893:9;:31::i;:::-;3336:595;;;:::o;553:127:1:-;518:10;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;640:1;621:21;;:7;:21;;;;613:30;;;;;;;;666:7;653:10;;:20;;;;;;;;;;;;;;;;;;553:127;:::o;2482:187:3:-;2537:11;2550;2574:20;2597:9;2607:3;2597:14;;;;;;;;;;;;;;;;;;;;2574:37;;2635:4;:8;;;2629:14;;;2652:4;:9;;2645:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2621:41;;;;2482:187;;;;:::o;1462:58:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;3183:157:3:-;518:10:1;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;799:6;;;;;;;;;;;791:15;;;;;;;;3276:1:3;3246:32;;:18;;;;;;;;;;;:32;;;3238:41;;;;;;;;3318:15;:13;:15::i;:::-;3183:157::o;1115:55:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;3689:125:3:-;3776:31;3786:5;3793:3;3798:8;3776:9;:31::i;:::-;3689:125;;;:::o;435:26:1:-;;;;;;;;;;;;;:::o;1679:187:4:-;1737:13;1770:19;:29;1790:8;1770:29;;;;;;;;;;;;;;;;;;;;;1762:37;;1834:1;1817:19;;:5;:19;;;;1809:28;;;;;;;;1854:5;1847:12;;1679:187;;;:::o;1337:33:3:-;;;;;;;;;;;;;:::o;1434:122:4:-;1490:13;1522:19;:27;1542:6;1522:27;;;;;;;;;;;;;;;;1515:34;;1434:122;;;:::o;2067:161:3:-;518:10:1;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;799:6;;;;;;;;;;;791:15;;;;;;;;2169:10:3;2148:18;;:31;;;;;;;;;;;;;;;;;;2194:27;2210:10;2194:27;;;;;;;;;;;;;;;;;;;;;;2067:161;:::o;3346:108::-;3394:13;3426:21;3441:5;;3426:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:21::i;:::-;3419:28;;3346:108;;;;:::o;830:78:1:-;518:10;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;729:6;;;;;;;;;;;728:7;720:16;;;;;;;;897:4;888:6;;:13;;;;;;;;;;;;;;;;;;830:78::o;4614:877:4:-;4675:21;4708:18;4881:23;4946:22;4998:19;5170:17;4729;4739:6;4729:9;:17::i;:::-;4708:38;;4774:1;4760:10;:15;4757:728;;;4848:1;4834:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4834:16:4;;;;4827:23;;;;4757:728;4921:10;4907:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4907:25:4;;;;4881:51;;4971:13;:11;:13::i;:::-;4946:38;;5020:1;4998:23;;5218:1;5206:13;;5202:245;5234:14;5221:9;:27;;5202:245;;;5318:6;5284:40;;:19;:30;5304:9;5284:30;;;;;;;;;;;;;;;;;;;;;:40;;;5281:152;;;5370:9;5348:6;5355:11;5348:19;;;;;;;;;;;;;;;;;:31;;;;;5401:13;;;;;;;5281:152;5250:11;;;;;;;5202:245;;;5468:6;5461:13;;4614:877;;;;;;;;;:::o;3460:112:3:-;3510:4;3548:3;3553:10;3538:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3533:32;;;3526:39;;3460:112;;;:::o;2037:517:4:-;729:6:1;;;;;;;;;;;728:7;720:16;;;;;;;;2212:1:4;2197:17;;:3;:17;;;;2189:26;;;;;;;;2325:4;2310:20;;:3;:20;;;;2302:29;;;;;;;;2395:27;2401:10;2413:8;2395:5;:27::i;:::-;2387:36;;;;;;;;2511;2521:10;2533:3;2538:8;2511:9;:36::i;:::-;2037:517;;:::o;2675:150:3:-;2737:7;2756:20;2779:9;2789:3;2779:14;;;;;;;;;;;;;;;;;;;;2756:37;;2810:4;:8;;;2803:15;;2675:150;;;;:::o;850:147:4:-;925:4;981:9;948:42;;:19;:29;968:8;948:29;;;;;;;;;;;;;;;;;;;;;:42;;;941:49;;850:147;;;;:::o;1168:125::-;1277:9;1242:22;:32;1265:8;1242:32;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;1168:125;;:::o;1566:166:2:-;1630:4;1646:9;1673:4;1679:10;1663:27;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1663:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1658:33;;;1646:45;;1715:10;;1708:4;:17;;;;;;;;1701:24;;1566:166;;;;:::o;1008:154:4:-;1090:4;1146:9;1113:42;;:19;:29;1133:8;1113:29;;;;;;;;;;;;;;;;;;;;;:42;;;1106:49;;1008:154;;;;:::o;1807:633:2:-;1961:19;:24;1981:3;1961:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;2059:3;2027:19;:29;2047:8;2027:29;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2185:1;2168:19;;:5;:19;;;;2165:188;;;2203:19;:26;2223:5;2203:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;2310:22;:32;2333:8;2310:32;;;;;;;;;;;;2303:39;;;;;;;;;;;2165:188;2403:30;2412:5;2419:3;2424:8;2403:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:633;;;:::o;914:76:1:-;518:10;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;799:6;;;;;;;;;;;791:15;;;;;;;;978:5;969:6;;:14;;;;;;;;;;;;;;;;;;914:76::o;2681:478:2:-;2737:13;2762:9;2809:20;2774:25;2793:5;2774:18;:25::i;:::-;2762:37;;2832:9;2847:20;;;;;;;;;2855:4;2847:20;;;;2861:5;2847:20;;;2832:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2832:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2809:59;;2925:40;2934:10;2946:12;2960:4;2925:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3063:38;3073:1;3076:10;3088:12;3063:9;:38::i;:::-;3119:19;:33;3139:12;3119:33;;;;;;;;;;;;;;;;;;;;;3112:40;;2681:478;;;;;:::o;262:3556:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"./EcoAllyOwnership.sol\";\n\n/// @title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n/// @author Bryson Kruk Design and Development\n/// @dev The main EcoAllies Contract, keeps track of all allies.\ncontract EcoAllyCore is EcoAllyOwnership {\n// We break the core contract into multiple files using inheritence, one for each major\n    // facet of functionality of EcoAllies. This allows us to keep related code bundled together while still\n    // avoiding a single giant file with everything in it. The breakdown is as follows:\n    //\n    //      - EcoAllyBase: This is where we define the most fundamental code shared throughout the core\n    //             functionality. This includes our main data storage, constants and data types, plus\n    //             internal functions for managing these items.\n    //\n    //      - EcoAllyAccessControl: This contract manages the various addresses and constraints for operations\n    //             that can be executed only by the CEO.\n    //\n    //      - EcoAllyOwnership: This provides the methods required for basic non-fungible token\n    //             transactions, following the draft ERC-721 spec (https://github.com/ethereum/EIPs/issues/721).\n\n    // Set in case the core contract is broken and an upgrade is required\n    address public newContractAddress;\n\n    /// @notice Creates the main EcoAllies smart contract instance.\n    constructor() public {\n        // Starts Paused.\n        paused = true;\n\n        // The Creator of the contract is the initial CEO\n        ceoAddress = msg.sender;\n    }\n\n    /// @dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n    /// This method does nothing but keep track of the new contract and emit a message indicating\n    /// that the new address is set. It's up to the clients of the contract to update to the new contract\n    /// address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n    /// @param _v2Address new address\n    function setNewAddress(address _v2Address) external onlyCEO whenPaused {\n        newContractAddress = _v2Address;\n        emit ContractUpgrade(_v2Address);\n    }\n\n    /// @notice No tipping!\n    /// @dev Reject all Ether from being sent here, hopefully preventing user accidents\n    // function() external payable {\n     \n    // }\n\n    /// @notice Returns all the relevant information about a specific EcoAlly.\n    function getEcoAlly(uint256 _id) external view returns(uint256 dna, string name ) {\n        EcoAlly storage ally = ecoAllies[_id];\n        return (dna = ally.dna, name = ally.name);\n    }\n\n    function getEcoAllyDnaOnly(uint256 _id) external view returns(uint256) {\n        EcoAlly storage ally = ecoAllies[_id];\n        return ally.dna;\n    }\n\n    /// @dev Override unpause so it requires all external contract addresses\n    ///  to be set before contract can be unpaused. Also, we can't have\n    ///  newContractAddress set either, because then the contract was upgraded.\n    /// @notice This is public rather than external so we can call super.unpause\n    ///  without using an expensive CALL.\n    function unpause() public onlyCEO whenPaused {\n        require(newContractAddress == address(0));\n\n        // Unpause contract\n        super.unpause();\n    }\n\n    function addAlly(string _name) external returns(address owner) {\n        return _createEcoAlly(_name);\n    }\n\n    function randNum(uint str) external view returns (uint) {\n        return uint(keccak256(str, msg.sender));\n    }\n    function randDna(string _str) external view returns (uint){\n        return _generateRandomDna(_str);\n    }\n\n    function transferEcoAlly(address _from, address _to, uint _tokenId) external {\n        _transfer(_from, _to, _tokenId);\n    }\n\n\n}",
  "sourcePath": "/Users/bryson/Documents/projects/solidity/bagtivism/contracts/EcoAllyCore.sol",
  "ast": {
    "absolutePath": "/Users/bryson/Documents/projects/solidity/bagtivism/contracts/EcoAllyCore.sol",
    "exportedSymbols": {
      "EcoAllyCore": [
        461
      ]
    },
    "id": 462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 304,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/bryson/Documents/projects/solidity/bagtivism/contracts/EcoAllyOwnership.sol",
        "file": "./EcoAllyOwnership.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 823,
        "src": "26:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "EcoAllyOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 822,
              "src": "286:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EcoAllyOwnership_$822",
                "typeString": "contract EcoAllyOwnership"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "286:16:3"
          }
        ],
        "contractDependencies": [
          60,
          144,
          302,
          822
        ],
        "contractKind": "contract",
        "documentation": "@title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n @author Bryson Kruk Design and Development\n @dev The main EcoAllies Contract, keeps track of all allies.",
        "fullyImplemented": true,
        "id": 461,
        "linearizedBaseContracts": [
          461,
          822,
          60,
          302,
          144
        ],
        "name": "EcoAllyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 309,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 461,
            "src": "1337:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 308,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1466:148:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1502:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1511:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1502:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1584:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "1597:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1597:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:23:3"
                }
              ]
            },
            "documentation": "@notice Creates the main EcoAllies smart contract instance.",
            "id": 322,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:3"
            },
            "scope": 461,
            "src": "1445:169:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "2138:90:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "2148:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "2169:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2148:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:31:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "2210:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 335,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "2194:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "2189:32:3"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n This method does nothing but keep track of the new contract and emit a message indicating\n that the new address is set. It's up to the clients of the contract to update to the new contract\n address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 340,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 326,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "2119:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2119:7:3"
              },
              {
                "arguments": null,
                "id": 329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 328,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "2127:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2127:10:3"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "2090:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2089:20:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2138:0:3"
            },
            "scope": 461,
            "src": "2067:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "2564:105:3",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "2574:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 349,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 178,
                        "src": "2574:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 354,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "2597:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$178_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 353,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 352,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "2607:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2597:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$178_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2574:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 355,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "2629:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "ally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "2635:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                              "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dna",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 175,
                          "src": "2635:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2629:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 347,
                          "src": "2645:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 360,
                            "name": "ally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "2652:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                              "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 177,
                          "src": "2652:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "src": "2645:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 363,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2628:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_string_memory_ptr_$",
                      "typeString": "tuple(uint256,string memory)"
                    }
                  },
                  "functionReturnParameters": 348,
                  "id": 364,
                  "nodeType": "Return",
                  "src": "2621:41:3"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific EcoAlly.",
            "id": 366,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "2502:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2502:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2501:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "dna",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "2537:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "2550:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2536:27:3"
            },
            "scope": 461,
            "src": "2482:187:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "2746:79:3",
              "statements": [
                {
                  "assignments": [
                    374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 374,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 383,
                      "src": "2756:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 373,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 178,
                        "src": "2756:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 378,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 375,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "2779:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$178_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 377,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 376,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2789:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2779:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$178_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2756:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "ally",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "2810:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "dna",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 175,
                    "src": "2810:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 372,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "2803:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 383,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEcoAllyDnaOnly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "2702:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2701:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 371,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "2737:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2736:9:3"
            },
            "scope": 461,
            "src": "2675:150:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "3228:112:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "3246:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3276:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3268:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3268:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3246:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        941,
                        942
                      ],
                      "referencedDeclaration": 941,
                      "src": "3238:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3238:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "3238:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 398,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "3318:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EcoAllyCore_$461",
                          "typeString": "contract super EcoAllyCore"
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143,
                      "src": "3318:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3318:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:15:3"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 404,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 386,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 385,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "3209:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3209:7:3"
              },
              {
                "arguments": null,
                "id": 388,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 387,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "3217:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3217:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3199:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3228:0:3"
            },
            "scope": 461,
            "src": "3183:157:3",
            "stateMutability": "nonpayable",
            "superFunction": 143,
            "visibility": "public"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "3409:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "3441:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 411,
                      "name": "_createEcoAlly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "3426:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3426:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 410,
                  "id": 414,
                  "nodeType": "Return",
                  "src": "3419:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 416,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "3363:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3362:14:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "3394:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3393:15:3"
            },
            "scope": 461,
            "src": "3346:108:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "3516:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 425,
                            "name": "str",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "3548:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 938,
                              "src": "3553:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3553:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 424,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 932,
                          "src": "3538:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                            "typeString": "function () pure returns (bytes32)"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3538:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3533:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3533:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 422,
                  "id": 430,
                  "nodeType": "Return",
                  "src": "3526:39:3"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "randNum",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "name": "str",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3477:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3477:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3476:10:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3510:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3509:6:3"
            },
            "scope": 461,
            "src": "3460:112:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "3635:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "_str",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "3671:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 439,
                      "name": "_generateRandomDna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3652:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) view returns (uint256)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3652:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 438,
                  "id": 442,
                  "nodeType": "Return",
                  "src": "3645:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 444,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "randDna",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "_str",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "3594:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3593:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "3630:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3630:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3629:6:3"
            },
            "scope": 461,
            "src": "3577:106:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "3766:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 454,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "3786:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "3793:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "3798:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 453,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "3776:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3776:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 460,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "3714:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3714:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "3729:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3729:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "3742:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3713:43:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3766:0:3"
            },
            "scope": 461,
            "src": "3689:125:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 462,
        "src": "262:3556:3"
      }
    ],
    "src": "0:3818:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/bryson/Documents/projects/solidity/bagtivism/contracts/EcoAllyCore.sol",
    "exportedSymbols": {
      "EcoAllyCore": [
        461
      ]
    },
    "id": 462,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 304,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/bryson/Documents/projects/solidity/bagtivism/contracts/EcoAllyOwnership.sol",
        "file": "./EcoAllyOwnership.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 462,
        "sourceUnit": 823,
        "src": "26:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "EcoAllyOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 822,
              "src": "286:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EcoAllyOwnership_$822",
                "typeString": "contract EcoAllyOwnership"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "286:16:3"
          }
        ],
        "contractDependencies": [
          60,
          144,
          302,
          822
        ],
        "contractKind": "contract",
        "documentation": "@title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n @author Bryson Kruk Design and Development\n @dev The main EcoAllies Contract, keeps track of all allies.",
        "fullyImplemented": true,
        "id": 461,
        "linearizedBaseContracts": [
          461,
          822,
          60,
          302,
          144
        ],
        "name": "EcoAllyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 309,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 461,
            "src": "1337:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 308,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1466:148:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1502:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1511:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1502:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1584:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 938,
                        "src": "1597:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1597:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:23:3"
                }
              ]
            },
            "documentation": "@notice Creates the main EcoAllies smart contract instance.",
            "id": 322,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:3"
            },
            "scope": 461,
            "src": "1445:169:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "2138:90:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "2148:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "2169:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2148:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:31:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "2210:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 335,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "2194:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "2189:32:3"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n This method does nothing but keep track of the new contract and emit a message indicating\n that the new address is set. It's up to the clients of the contract to update to the new contract\n address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 340,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 326,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "2119:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2119:7:3"
              },
              {
                "arguments": null,
                "id": 329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 328,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "2127:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2127:10:3"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "2090:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2089:20:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2138:0:3"
            },
            "scope": 461,
            "src": "2067:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "2564:105:3",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 366,
                      "src": "2574:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 349,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 178,
                        "src": "2574:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 354,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "2597:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$178_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 353,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 352,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "2607:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2597:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$178_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2574:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 355,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "2629:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "ally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "2635:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                              "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dna",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 175,
                          "src": "2635:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2629:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 347,
                          "src": "2645:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 360,
                            "name": "ally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "2652:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                              "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 177,
                          "src": "2652:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "src": "2645:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "id": 363,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2628:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_string_memory_ptr_$",
                      "typeString": "tuple(uint256,string memory)"
                    }
                  },
                  "functionReturnParameters": 348,
                  "id": 364,
                  "nodeType": "Return",
                  "src": "2621:41:3"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific EcoAlly.",
            "id": 366,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "2502:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2502:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2501:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "dna",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "2537:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "2550:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2536:27:3"
            },
            "scope": 461,
            "src": "2482:187:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "2746:79:3",
              "statements": [
                {
                  "assignments": [
                    374
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 374,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 383,
                      "src": "2756:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 373,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 178,
                        "src": "2756:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 378,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 375,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "2779:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$178_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 377,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 376,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2789:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2779:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$178_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2756:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 379,
                      "name": "ally",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "2810:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$178_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "dna",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 175,
                    "src": "2810:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 372,
                  "id": 381,
                  "nodeType": "Return",
                  "src": "2803:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 383,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEcoAllyDnaOnly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "2702:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2701:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 371,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 383,
                  "src": "2737:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2736:9:3"
            },
            "scope": 461,
            "src": "2675:150:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 403,
              "nodeType": "Block",
              "src": "3228:112:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "3246:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3276:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3268:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3268:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3246:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        941,
                        942
                      ],
                      "referencedDeclaration": 941,
                      "src": "3238:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3238:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "3238:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 398,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 962,
                        "src": "3318:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EcoAllyCore_$461",
                          "typeString": "contract super EcoAllyCore"
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143,
                      "src": "3318:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3318:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "3318:15:3"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 404,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 386,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 385,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "3209:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3209:7:3"
              },
              {
                "arguments": null,
                "id": 388,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 387,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "3217:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3217:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3199:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3228:0:3"
            },
            "scope": 461,
            "src": "3183:157:3",
            "stateMutability": "nonpayable",
            "superFunction": 143,
            "visibility": "public"
          },
          {
            "body": {
              "id": 415,
              "nodeType": "Block",
              "src": "3409:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 412,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "3441:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 411,
                      "name": "_createEcoAlly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "3426:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) returns (address)"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3426:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 410,
                  "id": 414,
                  "nodeType": "Return",
                  "src": "3419:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 416,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "3363:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3362:14:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 409,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 416,
                  "src": "3394:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3393:15:3"
            },
            "scope": 461,
            "src": "3346:108:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "3516:56:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 425,
                            "name": "str",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "3548:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 938,
                              "src": "3553:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3553:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 424,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 932,
                          "src": "3538:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                            "typeString": "function () pure returns (bytes32)"
                          }
                        },
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3538:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3533:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3533:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 422,
                  "id": 430,
                  "nodeType": "Return",
                  "src": "3526:39:3"
                }
              ]
            },
            "documentation": null,
            "id": 432,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "randNum",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "name": "str",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3477:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3477:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3476:10:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 421,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "3510:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 420,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3510:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3509:6:3"
            },
            "scope": 461,
            "src": "3460:112:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 443,
              "nodeType": "Block",
              "src": "3635:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 440,
                        "name": "_str",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "3671:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 439,
                      "name": "_generateRandomDna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "3652:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) view returns (uint256)"
                      }
                    },
                    "id": 441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3652:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 438,
                  "id": 442,
                  "nodeType": "Return",
                  "src": "3645:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 444,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "randDna",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "name": "_str",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "3594:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3594:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3593:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 437,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 444,
                  "src": "3630:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 436,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3630:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3629:6:3"
            },
            "scope": 461,
            "src": "3577:106:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "3766:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 454,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "3786:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 455,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 448,
                        "src": "3793:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 456,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "3798:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 453,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "3776:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3776:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 458,
                  "nodeType": "ExpressionStatement",
                  "src": "3776:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 460,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "3714:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3714:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "3729:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3729:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "3742:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3713:43:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3766:0:3"
            },
            "scope": 461,
            "src": "3689:125:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 462,
        "src": "262:3556:3"
      }
    ],
    "src": "0:3818:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xb73c64abdf3387aa4837c4af31ab82b5fdf74979",
      "transactionHash": "0x0fcd0ab3cb998fdea6d8d6f4822d49b09aa12dd1bc4d2de99305c87089b633bd"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-23T14:47:47.305Z"
}