{
  "contractName": "EcoAllyCore",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x0a0f8168"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x27d7874c"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ecoAllyIndexToApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3e4bd727"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ecoAllyIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4a765037"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x5c975abb"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6af04a57"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8456cb59"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "ownerTokens",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8462151c"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ecoAllyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "ecoAllyDNA",
          "type": "uint256"
        }
      ],
      "name": "Creation",
      "type": "event",
      "signature": "0x0c42492e9a23edb18d7a10ab834f9871ecd80970bffc97312a8a1c05b88e807d"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event",
      "signature": "0x450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa446199305"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_v2Address",
          "type": "address"
        }
      ],
      "name": "setNewAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x71587988"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getEcoAlly",
      "outputs": [
        {
          "name": "dna",
          "type": "uint256"
        },
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x3d1749cc"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getEcoAllyDnaOnly",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xb6e44a77"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x3f4ba83a"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_seed",
          "type": "uint256"
        }
      ],
      "name": "addAlly",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb15dcd5e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_seed",
          "type": "uint256"
        }
      ],
      "name": "randDna",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x1fdd0c1e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferEcoAlly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x5998b700"
    }
  ],
  "bytecode": "0x60806040526000805460a060020a60ff02191690556010600155662386f26fc1000060025534801561003057600080fd5b5060008054600160a060020a031960a060020a60ff021990911674010000000000000000000000000000000000000000171633179055610cbd806100756000396000f3fe60806040526004361061011c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146101215780630a0f81681461015c57806318160ddd1461018d5780631fdd0c1e146101b457806323b872dd146101de57806327d7874c146102215780633d1749cc146102545780633e4bd727146102975780633f4ba83a146102c15780634a765037146102d65780635998b700146103005780635c975abb146103435780636352211e1461036c5780636af04a571461039657806370a08231146103ab57806371587988146103de5780638456cb59146104115780638462151c14610426578063a9059cbb146104a9578063b15dcd5e146104e2578063b6e44a771461050c575b600080fd5b34801561012d57600080fd5b5061015a6004803603604081101561014457600080fd5b50600160a060020a038135169060200135610536565b005b34801561016857600080fd5b506101716105b8565b60408051600160a060020a039092168252519081900360200190f35b34801561019957600080fd5b506101a26105c7565b60408051918252519081900360200190f35b3480156101c057600080fd5b506101a2600480360360208110156101d757600080fd5b50356105d1565b3480156101ea57600080fd5b5061015a6004803603606081101561020157600080fd5b50600160a060020a038135811691602081013590911690604001356105e4565b34801561022d57600080fd5b5061015a6004803603602081101561024457600080fd5b5035600160a060020a0316610660565b34801561026057600080fd5b5061027e6004803603602081101561027757600080fd5b50356106bb565b6040805192835260208301919091528051918290030190f35b3480156102a357600080fd5b50610171600480360360208110156102ba57600080fd5b50356106e2565b3480156102cd57600080fd5b5061015a6106fd565b3480156102e257600080fd5b50610171600480360360208110156102f957600080fd5b503561074c565b34801561030c57600080fd5b5061015a6004803603606081101561032357600080fd5b50600160a060020a03813581169160208101359091169060400135610650565b34801561034f57600080fd5b50610358610767565b604080519115158252519081900360200190f35b34801561037857600080fd5b506101716004803603602081101561038f57600080fd5b5035610777565b3480156103a257600080fd5b5061017161079b565b3480156103b757600080fd5b506101a2600480360360208110156103ce57600080fd5b5035600160a060020a03166107aa565b3480156103ea57600080fd5b5061015a6004803603602081101561040157600080fd5b5035600160a060020a03166107c5565b34801561041d57600080fd5b5061015a610855565b34801561043257600080fd5b506104596004803603602081101561044957600080fd5b5035600160a060020a03166108a9565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561049557818101518382015260200161047d565b505050509050019250505060405180910390f35b3480156104b557600080fd5b5061015a600480360360408110156104cc57600080fd5b50600160a060020a038135169060200135610972565b3480156104ee57600080fd5b506101716004803603602081101561050557600080fd5b50356109d8565b34801561051857600080fd5b506101a26004803603602081101561052f57600080fd5b50356109e3565b60005460a060020a900460ff161561054d57600080fd5b6105573382610a08565b151561056257600080fd5b61056c8183610a28565b60408051338152600160a060020a038416602082015280820183905290517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259181900360600190a15050565b600054600160a060020a031681565b6003546000190190565b60006105dc82610a63565b90505b919050565b60005460a060020a900460ff16156105fb57600080fd5b600160a060020a038216151561061057600080fd5b600160a060020a03821630141561062657600080fd5b6106303382610a08565b151561063b57600080fd5b6106458382610a08565b151561065057600080fd5b61065b838383610a9c565b505050565b600054600160a060020a0316331461067757600080fd5b600160a060020a038116151561068c57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008060006003848154811015156106cf57fe5b6000918252602090912001549492505050565b600660205260009081526040902054600160a060020a031681565b600054600160a060020a0316331461071457600080fd5b60005460a060020a900460ff16151561072c57600080fd5b600754600160a060020a03161561074257600080fd5b61074a610b86565b565b600460205260009081526040902054600160a060020a031681565b60005460a060020a900460ff1681565b600081815260046020526040902054600160a060020a03168015156105df57600080fd5b600754600160a060020a031681565b600160a060020a031660009081526005602052604090205490565b600054600160a060020a031633146107dc57600080fd5b60005460a060020a900460ff1615156107f457600080fd5b60078054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa4461993059181900360200190a150565b600054600160a060020a0316331461086c57600080fd5b60005460a060020a900460ff161561088357600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a179055565b606060006108b6836107aa565b90508015156108d55750506040805160008152602081019091526105df565b606081604051908082528060200260200182016040528015610901578160200160208202803883390190505b509050600061090e6105c7565b90506000805b82811161096557600081815260046020526040902054600160a060020a038881169116141561095d5780848381518110151561094c57fe5b602090810290910101526001909101905b600101610914565b83955050505050506105df565b60005460a060020a900460ff161561098957600080fd5b600160a060020a038216151561099e57600080fd5b600160a060020a0382163014156109b457600080fd5b6109be3382610a08565b15156109c957600080fd5b6109d4338383610a9c565b5050565b60006105dc82610bd5565b6000806003838154811015156109f557fe5b6000918252602090912001549392505050565b600090815260046020526040902054600160a060020a0391821691161490565b600091825260066020526040909120805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b60408051602080820184905282518083038201815291830190925280519101206002546000919081811515610a9457fe5b069392505050565b600160a060020a0380831660008181526005602090815260408083208054600101905585835260049091529020805473ffffffffffffffffffffffffffffffffffffffff19169091179055831615610b3757600160a060020a0383166000908152600560209081526040808320805460001901905583835260069091529020805473ffffffffffffffffffffffffffffffffffffffff191690555b60408051600160a060020a0380861682528416602082015280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1505050565b600054600160a060020a03163314610b9d57600080fd5b60005460a060020a900460ff161515610bb557600080fd5b6000805474ff000000000000000000000000000000000000000019169055565b600080610be183610a63565b60408051602081810183528382526003805460018101825560009190915291517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b83015582513381529081018290528083018490529151929350917f0c42492e9a23edb18d7a10ab834f9871ecd80970bffc97312a8a1c05b88e807d9181900360600190a1610c7260003383610a9c565b600090815260046020526040902054600160a060020a0316939250505056fea165627a7a72305820348c78ad54d20cb790352d23eac0b75305f22b10aa0e79dd7e3b1cf501579f8d0029",
  "deployedBytecode": "0x60806040526004361061011c5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146101215780630a0f81681461015c57806318160ddd1461018d5780631fdd0c1e146101b457806323b872dd146101de57806327d7874c146102215780633d1749cc146102545780633e4bd727146102975780633f4ba83a146102c15780634a765037146102d65780635998b700146103005780635c975abb146103435780636352211e1461036c5780636af04a571461039657806370a08231146103ab57806371587988146103de5780638456cb59146104115780638462151c14610426578063a9059cbb146104a9578063b15dcd5e146104e2578063b6e44a771461050c575b600080fd5b34801561012d57600080fd5b5061015a6004803603604081101561014457600080fd5b50600160a060020a038135169060200135610536565b005b34801561016857600080fd5b506101716105b8565b60408051600160a060020a039092168252519081900360200190f35b34801561019957600080fd5b506101a26105c7565b60408051918252519081900360200190f35b3480156101c057600080fd5b506101a2600480360360208110156101d757600080fd5b50356105d1565b3480156101ea57600080fd5b5061015a6004803603606081101561020157600080fd5b50600160a060020a038135811691602081013590911690604001356105e4565b34801561022d57600080fd5b5061015a6004803603602081101561024457600080fd5b5035600160a060020a0316610660565b34801561026057600080fd5b5061027e6004803603602081101561027757600080fd5b50356106bb565b6040805192835260208301919091528051918290030190f35b3480156102a357600080fd5b50610171600480360360208110156102ba57600080fd5b50356106e2565b3480156102cd57600080fd5b5061015a6106fd565b3480156102e257600080fd5b50610171600480360360208110156102f957600080fd5b503561074c565b34801561030c57600080fd5b5061015a6004803603606081101561032357600080fd5b50600160a060020a03813581169160208101359091169060400135610650565b34801561034f57600080fd5b50610358610767565b604080519115158252519081900360200190f35b34801561037857600080fd5b506101716004803603602081101561038f57600080fd5b5035610777565b3480156103a257600080fd5b5061017161079b565b3480156103b757600080fd5b506101a2600480360360208110156103ce57600080fd5b5035600160a060020a03166107aa565b3480156103ea57600080fd5b5061015a6004803603602081101561040157600080fd5b5035600160a060020a03166107c5565b34801561041d57600080fd5b5061015a610855565b34801561043257600080fd5b506104596004803603602081101561044957600080fd5b5035600160a060020a03166108a9565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561049557818101518382015260200161047d565b505050509050019250505060405180910390f35b3480156104b557600080fd5b5061015a600480360360408110156104cc57600080fd5b50600160a060020a038135169060200135610972565b3480156104ee57600080fd5b506101716004803603602081101561050557600080fd5b50356109d8565b34801561051857600080fd5b506101a26004803603602081101561052f57600080fd5b50356109e3565b60005460a060020a900460ff161561054d57600080fd5b6105573382610a08565b151561056257600080fd5b61056c8183610a28565b60408051338152600160a060020a038416602082015280820183905290517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259181900360600190a15050565b600054600160a060020a031681565b6003546000190190565b60006105dc82610a63565b90505b919050565b60005460a060020a900460ff16156105fb57600080fd5b600160a060020a038216151561061057600080fd5b600160a060020a03821630141561062657600080fd5b6106303382610a08565b151561063b57600080fd5b6106458382610a08565b151561065057600080fd5b61065b838383610a9c565b505050565b600054600160a060020a0316331461067757600080fd5b600160a060020a038116151561068c57600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008060006003848154811015156106cf57fe5b6000918252602090912001549492505050565b600660205260009081526040902054600160a060020a031681565b600054600160a060020a0316331461071457600080fd5b60005460a060020a900460ff16151561072c57600080fd5b600754600160a060020a03161561074257600080fd5b61074a610b86565b565b600460205260009081526040902054600160a060020a031681565b60005460a060020a900460ff1681565b600081815260046020526040902054600160a060020a03168015156105df57600080fd5b600754600160a060020a031681565b600160a060020a031660009081526005602052604090205490565b600054600160a060020a031633146107dc57600080fd5b60005460a060020a900460ff1615156107f457600080fd5b60078054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa4461993059181900360200190a150565b600054600160a060020a0316331461086c57600080fd5b60005460a060020a900460ff161561088357600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a179055565b606060006108b6836107aa565b90508015156108d55750506040805160008152602081019091526105df565b606081604051908082528060200260200182016040528015610901578160200160208202803883390190505b509050600061090e6105c7565b90506000805b82811161096557600081815260046020526040902054600160a060020a038881169116141561095d5780848381518110151561094c57fe5b602090810290910101526001909101905b600101610914565b83955050505050506105df565b60005460a060020a900460ff161561098957600080fd5b600160a060020a038216151561099e57600080fd5b600160a060020a0382163014156109b457600080fd5b6109be3382610a08565b15156109c957600080fd5b6109d4338383610a9c565b5050565b60006105dc82610bd5565b6000806003838154811015156109f557fe5b6000918252602090912001549392505050565b600090815260046020526040902054600160a060020a0391821691161490565b600091825260066020526040909120805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b60408051602080820184905282518083038201815291830190925280519101206002546000919081811515610a9457fe5b069392505050565b600160a060020a0380831660008181526005602090815260408083208054600101905585835260049091529020805473ffffffffffffffffffffffffffffffffffffffff19169091179055831615610b3757600160a060020a0383166000908152600560209081526040808320805460001901905583835260069091529020805473ffffffffffffffffffffffffffffffffffffffff191690555b60408051600160a060020a0380861682528416602082015280820183905290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360600190a1505050565b600054600160a060020a03163314610b9d57600080fd5b60005460a060020a900460ff161515610bb557600080fd5b6000805474ff000000000000000000000000000000000000000019169055565b600080610be183610a63565b60408051602081810183528382526003805460018101825560009190915291517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b83015582513381529081018290528083018490529151929350917f0c42492e9a23edb18d7a10ab834f9871ecd80970bffc97312a8a1c05b88e807d9181900360600190a1610c7260003383610a9c565b600090815260046020526040902054600160a060020a0316939250505056fea165627a7a72305820348c78ad54d20cb790352d23eac0b75305f22b10aa0e79dd7e3b1cf501579f8d0029",
  "sourceMap": "261:3427:3:-;;;455:5:1;434:26;;-1:-1:-1;;;;;;434:26:1;;;667:2:2;434:26:1;650:19:2;693:15;675:33;;1444:169:3;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;1501:6:3;:13;;-1:-1:-1;;;;;;;;;;;;1501:13:3;;;;;1583:23;1596:10;1583:23;;;261:3427;;;;;;",
  "deployedSourceMap": "261:3427:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2764:366:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2764:366:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2764:366:4;;;;;;;;;;;347:25:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;347:25:1;;;;;;;;-1:-1:-1;;;;;347:25:1;;;;;;;;;;;;;;4060:93:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4060:93:4;;;;;;;;;;;;;;;;;;;;3447:106:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3447:106:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3447:106:3;;;3335:595:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3335:595:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3335:595:4;;;;;;;;;;;;;;;;;;552:127:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;552:127:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;552:127:1;-1:-1:-1;;;;;552:127:1;;;2481:178:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2481:178:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2481:178:3;;;;;;;;;;;;;;;;;;;;;;;;;;1440:58:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1440:58:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1440:58:2;;;3173:156:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3173:156:3;;;;1093:55:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1093:55:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1093:55:2;;;3559:125:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3559:125:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3559:125:3;;;;;;;;;;;;;;;;;;434:26:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;434:26:1;;;;;;;;;;;;;;;;;;;;;;1678:187:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1678:187:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1678:187:4;;;1336:33:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1336:33:3;;;;1433:122:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1433:122:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1433:122:4;-1:-1:-1;;;;;1433:122:4;;;2066:161:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2066:161:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2066:161:3;-1:-1:-1;;;;;2066:161:3;;;829:78:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;829:78:1;;;;4616:884:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4616:884:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4616:884:4;-1:-1:-1;;;;;4616:884:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4616:884:4;;;;;;;;;;;;;;;;;2036:517;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2036:517:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2036:517:4;;;;;;;;;3335:106:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3335:106:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3335:106:3;;;2665:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2665:150:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2665:150:3;;;2764:366:4;728:6:1;;-1:-1:-1;;;728:6:1;;;;727:7;719:16;;;;;;2906:27:4;2912:10;2924:8;2906:5;:27::i;:::-;2898:36;;;;;;;;3013:23;3022:8;3032:3;3013:8;:23::i;:::-;3088:35;;;3097:10;3088:35;;-1:-1:-1;;;;;3088:35:4;;;;;;;;;;;;;;;;;;;;;;;2764:366;;:::o;347:25:1:-;;;-1:-1:-1;;;;;347:25:1;;:::o;4060:93:4:-;4127:9;:16;-1:-1:-1;;4127:19:4;4060:93;:::o;3447:106:3:-;3499:4;3521:25;3540:5;3521:18;:25::i;:::-;3514:32;;3447:106;;;;:::o;3335:595:4:-;728:6:1;;-1:-1:-1;;;728:6:1;;;;727:7;719:16;;;;;;-1:-1:-1;;;;;3514:17:4;;;;3506:26;;;;;;-1:-1:-1;;;;;3627:20:4;;3642:4;3627:20;;3619:29;;;;;;3716:34;3729:10;3741:8;3716:12;:34::i;:::-;3708:43;;;;;;;;3769:22;3775:5;3782:8;3769:5;:22::i;:::-;3761:31;;;;;;;;3892;3902:5;3909:3;3914:8;3892:9;:31::i;:::-;3335:595;;;:::o;552:127:1:-;517:10;;-1:-1:-1;;;;;517:10:1;503;:24;495:33;;;;;;-1:-1:-1;;;;;620:21:1;;;;612:30;;;;;;652:10;:20;;-1:-1:-1;;652:20:1;-1:-1:-1;;;;;652:20:1;;;;;;;;;;552:127::o;2481:178:3:-;2536:11;2549:10;2572:20;2595:9;2605:3;2595:14;;;;;;;;;;;;;;;;;;;2633:8;;2481:178;-1:-1:-1;;;2481:178:3:o;1440:58:2:-;;;;;;;;;;;;-1:-1:-1;;;;;1440:58:2;;:::o;3173:156:3:-;517:10:1;;-1:-1:-1;;;;;517:10:1;503;:24;495:33;;;;;;798:6;;-1:-1:-1;;;798:6:1;;;;790:15;;;;;;;;3236:18:3;;-1:-1:-1;;;;;3236:18:3;:32;3228:41;;;;;;3307:15;:13;:15::i;:::-;3173:156::o;1093:55:2:-;;;;;;;;;;;;-1:-1:-1;;;;;1093:55:2;;:::o;434:26:1:-;;;-1:-1:-1;;;434:26:1;;;;;:::o;1678:187:4:-;1736:13;1769:29;;;:19;:29;;;;;;-1:-1:-1;;;;;1769:29:4;1816:19;;;1808:28;;;;;1336:33:3;;;-1:-1:-1;;;;;1336:33:3;;:::o;1433:122:4:-;-1:-1:-1;;;;;1521:27:4;1489:13;1521:27;;;:19;:27;;;;;;;1433:122::o;2066:161:3:-;517:10:1;;-1:-1:-1;;;;;517:10:1;503;:24;495:33;;;;;;798:6;;-1:-1:-1;;;798:6:1;;;;790:15;;;;;;;;2147:18:3;:31;;-1:-1:-1;;;;;2147:31:3;;-1:-1:-1;;2147:31:3;;;;;;;;2193:27;;;;;;;;;;;;;;;;2066:161;:::o;829:78:1:-;517:10;;-1:-1:-1;;;;;517:10:1;503;:24;495:33;;;;;;728:6;;-1:-1:-1;;;728:6:1;;;;727:7;719:16;;;;;;887:6;:13;;-1:-1:-1;;887:13:1;-1:-1:-1;;;887:13:1;;;829:78::o;4616:884:4:-;4677:28;4717:18;4738:17;4748:6;4738:9;:17::i;:::-;4717:38;-1:-1:-1;4769:15:4;;4766:728;;;-1:-1:-1;;4843:16:4;;;4857:1;4843:16;;;;;;;;4836:23;;4766:728;4890:23;4930:10;4916:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4916:25:4;;4890:51;;4955:22;4980:13;:11;:13::i;:::-;4955:38;-1:-1:-1;5007:19:4;;5211:245;5230:27;;;5211:245;;5293:30;;;;:19;:30;;;;;;-1:-1:-1;;;;;5293:40:4;;;:30;;:40;5290:152;;;5379:9;5357:6;5364:11;5357:19;;;;;;;;;;;;;;;;;;:31;5410:13;;;;;5290:152;5259:11;;5211:245;;;5477:6;5470:13;;;;;;;;;2036:517;728:6:1;;-1:-1:-1;;;728:6:1;;;;727:7;719:16;;;;;;-1:-1:-1;;;;;2196:17:4;;;;2188:26;;;;;;-1:-1:-1;;;;;2309:20:4;;2324:4;2309:20;;2301:29;;;;;;2394:27;2400:10;2412:8;2394:5;:27::i;:::-;2386:36;;;;;;;;2510;2520:10;2532:3;2537:8;2510:9;:36::i;:::-;2036:517;;:::o;3335:106:3:-;3381:13;3413:21;3428:5;3413:14;:21::i;2665:150::-;2727:7;2746:20;2769:9;2779:3;2769:14;;;;;;;;;;;;;;;;;;;2800:8;;2665:150;-1:-1:-1;;;2665:150:3:o;849:147:4:-;924:4;947:29;;;:19;:29;;;;;;-1:-1:-1;;;;;947:42:4;;;:29;;:42;;849:147::o;1167:125::-;1241:32;;;;:22;:32;;;;;;:44;;-1:-1:-1;;1241:44:4;-1:-1:-1;;;;;1241:44:4;;;;;;;;;1167:125::o;1544:172:2:-;1650:23;;;;;;;;;;;;26:21:-1;;;22:32;;6:49;;1650:23:2;;;;;;1640:34;;;;;1699:10;;1607:4;;1640:34;;1692:17;;;;;;;;;1544:172;-1:-1:-1;;;1544:172:2:o;1791:633::-;-1:-1:-1;;;;;1945:24:2;;;;;;;:19;:24;;;;;;;;:26;;;;;;2011:29;;;:19;:29;;;;;:35;;-1:-1:-1;;2011:35:2;;;;;;2152:19;;;2149:188;;-1:-1:-1;;;;;2187:26:2;;;;;;:19;:26;;;;;;;;:28;;-1:-1:-1;;2187:28:2;;;2294:32;;;:22;:32;;;;;2287:39;;-1:-1:-1;;2287:39:2;;;2149:188;2387:30;;;-1:-1:-1;;;;;2387:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:633;;;:::o;913:76:1:-;517:10;;-1:-1:-1;;;;;517:10:1;503;:24;495:33;;;;;;798:6;;-1:-1:-1;;;798:6:1;;;;790:15;;;;;;;;977:5;968:14;;-1:-1:-1;;968:14:1;;;913:76::o;2665:513:2:-;2719:13;2744:9;2756:25;2775:5;2756:18;:25::i;:::-;2829:13;;;;;;;;;;;;2814:9;27:10:-1;;2845:1:2;23:18:-1;;45:23;;2791:20:2;2814:29;;;;;;;;;;2903:40;;2912:10;2903:40;;;;;;;;;;;;;;;;2744:37;;-1:-1:-1;27:10;2903:40:2;;;;;;;;;3041:79;3051:42;3095:10;3107:12;3041:9;:79::i;:::-;3138:33;;;;:19;:33;;;;;;-1:-1:-1;;;;;3138:33:2;;2665:513;-1:-1:-1;;;2665:513:2:o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./EcoAllyOwnership.sol\";\n\n/// @title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n/// @author Bryson Kruk Design and Development\n/// @dev The main EcoAllies Contract, keeps track of all allies.\ncontract EcoAllyCore is EcoAllyOwnership {\n// We break the core contract into multiple files using inheritence, one for each major\n    // facet of functionality of EcoAllies. This allows us to keep related code bundled together while still\n    // avoiding a single giant file with everything in it. The breakdown is as follows:\n    //\n    //      - EcoAllyBase: This is where we define the most fundamental code shared throughout the core\n    //             functionality. This includes our main data storage, constants and data types, plus\n    //             internal functions for managing these items.\n    //\n    //      - EcoAllyAccessControl: This contract manages the various addresses and constraints for operations\n    //             that can be executed only by the CEO.\n    //\n    //      - EcoAllyOwnership: This provides the methods required for basic non-fungible token\n    //             transactions, following the draft ERC-721 spec (https://github.com/ethereum/EIPs/issues/721).\n\n    // Set in case the core contract is broken and an upgrade is required\n    address public newContractAddress;\n\n    /// @notice Creates the main EcoAllies smart contract instance.\n    constructor() public {\n        // Starts Paused.\n        paused = true;\n\n        // The Creator of the contract is the initial CEO\n        ceoAddress = msg.sender;\n    }\n\n    /// @dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n    /// This method does nothing but keep track of the new contract and emit a message indicating\n    /// that the new address is set. It's up to the clients of the contract to update to the new contract\n    /// address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n    /// @param _v2Address new address\n    function setNewAddress(address _v2Address) external onlyCEO whenPaused {\n        newContractAddress = _v2Address;\n        emit ContractUpgrade(_v2Address);\n    }\n\n    /// @notice No tipping!\n    /// @dev Reject all Ether from being sent here, hopefully preventing user accidents\n    // function() external payable {\n     \n    // }\n\n    /// @notice Returns all the relevant information about a specific EcoAlly.\n    function getEcoAlly(uint256 _id) external view returns(uint256 dna, uint256 id ) {\n        EcoAlly storage ally = ecoAllies[_id];\n        return (dna = ally.dna, id = _id);\n    }\n\n    function getEcoAllyDnaOnly(uint256 _id) external view returns(uint256) {\n        EcoAlly storage ally = ecoAllies[_id];\n        return ally.dna;\n    }\n\n    /// @dev Override unpause so it requires all external contract addresses\n    ///  to be set before contract can be unpaused. Also, we can't have\n    ///  newContractAddress set either, because then the contract was upgraded.\n    /// @notice This is public rather than external so we can call super.unpause\n    ///  without using an expensive CALL.\n    function unpause() public onlyCEO whenPaused {\n        require(newContractAddress == address(0));\n        // Unpause contract\n        super.unpause();\n    }\n\n    function addAlly(uint _seed) external returns(address owner) {\n        return _createEcoAlly(_seed);\n    }\n\n    function randDna(uint _seed) external view returns (uint){\n        return _generateRandomDna(_seed);\n    }\n\n    function transferEcoAlly(address _from, address _to, uint _tokenId) external {\n        _transfer(_from, _to, _tokenId);\n    }\n\n\n}",
  "sourcePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyCore.sol",
  "ast": {
    "absolutePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyCore.sol",
    "exportedSymbols": {
      "EcoAllyCore": [
        444
      ]
    },
    "id": 445,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 304,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyOwnership.sol",
        "file": "./EcoAllyOwnership.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 445,
        "sourceUnit": 808,
        "src": "25:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "EcoAllyOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 807,
              "src": "285:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EcoAllyOwnership_$807",
                "typeString": "contract EcoAllyOwnership"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "285:16:3"
          }
        ],
        "contractDependencies": [
          144,
          60,
          302,
          807
        ],
        "contractKind": "contract",
        "documentation": "@title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n @author Bryson Kruk Design and Development\n @dev The main EcoAllies Contract, keeps track of all allies.",
        "fullyImplemented": true,
        "id": 444,
        "linearizedBaseContracts": [
          444,
          807,
          60,
          302,
          144
        ],
        "name": "EcoAllyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 309,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 444,
            "src": "1336:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 308,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1336:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1465:148:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1501:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1510:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1501:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1583:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "1596:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1596:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1583:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:23:3"
                }
              ]
            },
            "documentation": "@notice Creates the main EcoAllies smart contract instance.",
            "id": 322,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:2:3"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1465:0:3"
            },
            "scope": 444,
            "src": "1444:169:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "2137:90:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "2147:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "2168:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2147:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:31:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "2209:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 335,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "2193:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2193:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "2188:32:3"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n This method does nothing but keep track of the new contract and emit a message indicating\n that the new address is set. It's up to the clients of the contract to update to the new contract\n address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 326,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "2118:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2118:7:3"
              },
              {
                "arguments": null,
                "id": 329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 328,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "2126:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2126:10:3"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "2089:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2088:20:3"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:0:3"
            },
            "scope": 444,
            "src": "2066:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "2562:97:3",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 364,
                      "src": "2572:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 349,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 176,
                        "src": "2572:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 354,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2595:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$176_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 353,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 352,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "2605:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2595:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$176_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 355,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "2627:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "ally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "2633:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                              "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dna",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 175,
                          "src": "2633:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2627:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 347,
                          "src": "2643:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "2648:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2643:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 362,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2626:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 348,
                  "id": 363,
                  "nodeType": "Return",
                  "src": "2619:33:3"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific EcoAlly.",
            "id": 365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "2501:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2500:13:3"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "dna",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "2536:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2536:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "2549:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2535:26:3"
            },
            "scope": 444,
            "src": "2481:178:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "2736:79:3",
              "statements": [
                {
                  "assignments": [
                    373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 373,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 381,
                      "src": "2746:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 372,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 176,
                        "src": "2746:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 374,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2769:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$176_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 376,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 375,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "2779:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2769:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$176_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2746:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 378,
                      "name": "ally",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "2800:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "dna",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 175,
                    "src": "2800:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 371,
                  "id": 380,
                  "nodeType": "Return",
                  "src": "2793:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEcoAllyDnaOnly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "2692:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2692:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2691:13:3"
            },
            "returnParameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "2727:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2727:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2726:9:3"
            },
            "scope": 444,
            "src": "2665:150:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "3218:111:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "3236:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3266:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3258:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3258:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3236:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        926,
                        927
                      ],
                      "referencedDeclaration": 926,
                      "src": "3228:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3228:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "3228:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "3307:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EcoAllyCore_$444",
                          "typeString": "contract super EcoAllyCore"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143,
                      "src": "3307:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3307:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "3307:15:3"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 385,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 384,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "3199:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3199:7:3"
              },
              {
                "arguments": null,
                "id": 387,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 386,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "3207:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3207:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3189:2:3"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3218:0:3"
            },
            "scope": 444,
            "src": "3173:156:3",
            "stateMutability": "nonpayable",
            "superFunction": 143,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "3396:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "_seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "3428:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 410,
                      "name": "_createEcoAlly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "3413:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) returns (address)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3413:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 409,
                  "id": 413,
                  "nodeType": "Return",
                  "src": "3406:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "name": "_seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3352:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3352:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3351:12:3"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3381:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3381:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3380:15:3"
            },
            "scope": 444,
            "src": "3335:106:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "3504:49:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "_seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "3540:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 422,
                      "name": "_generateRandomDna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "3521:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 421,
                  "id": 425,
                  "nodeType": "Return",
                  "src": "3514:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randDna",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "_seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3464:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3464:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3463:12:3"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3499:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3499:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3498:6:3"
            },
            "scope": 444,
            "src": "3447:106:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "3636:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3656:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 438,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "3663:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "3668:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 436,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "3646:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3646:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "3646:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "3584:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "3599:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 433,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "3612:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3583:43:3"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3636:0:3"
            },
            "scope": 444,
            "src": "3559:125:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 445,
        "src": "261:3427:3"
      }
    ],
    "src": "0:3688:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyCore.sol",
    "exportedSymbols": {
      "EcoAllyCore": [
        444
      ]
    },
    "id": 445,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 304,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyOwnership.sol",
        "file": "./EcoAllyOwnership.sol",
        "id": 305,
        "nodeType": "ImportDirective",
        "scope": 445,
        "sourceUnit": 808,
        "src": "25:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 306,
              "name": "EcoAllyOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 807,
              "src": "285:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EcoAllyOwnership_$807",
                "typeString": "contract EcoAllyOwnership"
              }
            },
            "id": 307,
            "nodeType": "InheritanceSpecifier",
            "src": "285:16:3"
          }
        ],
        "contractDependencies": [
          144,
          60,
          302,
          807
        ],
        "contractKind": "contract",
        "documentation": "@title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n @author Bryson Kruk Design and Development\n @dev The main EcoAllies Contract, keeps track of all allies.",
        "fullyImplemented": true,
        "id": 444,
        "linearizedBaseContracts": [
          444,
          807,
          60,
          302,
          144
        ],
        "name": "EcoAllyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 309,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 444,
            "src": "1336:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 308,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1336:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1465:148:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1501:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1510:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1501:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "1501:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 316,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1583:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 923,
                        "src": "1596:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1596:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1583:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:23:3"
                }
              ]
            },
            "documentation": "@notice Creates the main EcoAllies smart contract instance.",
            "id": 322,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1455:2:3"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1465:0:3"
            },
            "scope": 444,
            "src": "1444:169:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "2137:90:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 331,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "2147:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 332,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "2168:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2147:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "2147:31:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 336,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "2209:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 335,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "2193:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2193:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "2188:32:3"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n This method does nothing but keep track of the new contract and emit a message indicating\n that the new address is set. It's up to the clients of the contract to update to the new contract\n address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 327,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 326,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "2118:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2118:7:3"
              },
              {
                "arguments": null,
                "id": 329,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 328,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "2126:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2126:10:3"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "2089:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2088:20:3"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:0:3"
            },
            "scope": 444,
            "src": "2066:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "2562:97:3",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 364,
                      "src": "2572:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 349,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 176,
                        "src": "2572:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 354,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 351,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2595:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$176_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 353,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 352,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "2605:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2595:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$176_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2572:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 355,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 345,
                          "src": "2627:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 356,
                            "name": "ally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "2633:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                              "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dna",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 175,
                          "src": "2633:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2627:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 359,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 347,
                          "src": "2643:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 360,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "2648:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2643:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 362,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2626:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 348,
                  "id": 363,
                  "nodeType": "Return",
                  "src": "2619:33:3"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific EcoAlly.",
            "id": 365,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "2501:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2500:13:3"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "name": "dna",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "2536:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2536:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "2549:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2549:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2535:26:3"
            },
            "scope": 444,
            "src": "2481:178:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "2736:79:3",
              "statements": [
                {
                  "assignments": [
                    373
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 373,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 381,
                      "src": "2746:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 372,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 176,
                        "src": "2746:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 377,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 374,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2769:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$176_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 376,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 375,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "2779:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2769:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$176_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2746:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 378,
                      "name": "ally",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "2800:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "dna",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 175,
                    "src": "2800:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 371,
                  "id": 380,
                  "nodeType": "Return",
                  "src": "2793:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEcoAllyDnaOnly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "2692:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2692:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2691:13:3"
            },
            "returnParameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 370,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "2727:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2727:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2726:9:3"
            },
            "scope": 444,
            "src": "2665:150:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "3218:111:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 390,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 309,
                          "src": "3236:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3266:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3258:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3258:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3236:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 389,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        926,
                        927
                      ],
                      "referencedDeclaration": 926,
                      "src": "3228:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3228:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "3228:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 397,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "3307:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EcoAllyCore_$444",
                          "typeString": "contract super EcoAllyCore"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143,
                      "src": "3307:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3307:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "3307:15:3"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 403,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 385,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 384,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "3199:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3199:7:3"
              },
              {
                "arguments": null,
                "id": 387,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 386,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "3207:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3207:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3189:2:3"
            },
            "returnParameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3218:0:3"
            },
            "scope": 444,
            "src": "3173:156:3",
            "stateMutability": "nonpayable",
            "superFunction": 143,
            "visibility": "public"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "3396:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 411,
                        "name": "_seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 405,
                        "src": "3428:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 410,
                      "name": "_createEcoAlly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "3413:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) returns (address)"
                      }
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3413:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 409,
                  "id": 413,
                  "nodeType": "Return",
                  "src": "3406:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "name": "_seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3352:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3352:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3351:12:3"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "3381:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3381:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3380:15:3"
            },
            "scope": 444,
            "src": "3335:106:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "3504:49:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "_seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "3540:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 422,
                      "name": "_generateRandomDna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 214,
                      "src": "3521:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3521:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 421,
                  "id": 425,
                  "nodeType": "Return",
                  "src": "3514:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randDna",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "_seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3464:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3464:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3463:12:3"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 420,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "3499:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 419,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3499:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3498:6:3"
            },
            "scope": 444,
            "src": "3447:106:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "3636:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3656:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 438,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "3663:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 433,
                        "src": "3668:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 436,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 258,
                      "src": "3646:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3646:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "3646:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "3584:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3584:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 431,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "3599:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3599:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 433,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "3612:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3583:43:3"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3636:0:3"
            },
            "scope": 444,
            "src": "3559:125:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 445,
        "src": "261:3427:3"
      }
    ],
    "src": "0:3688:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x7912fa1a0a94f8d403278942822ca31615ea9ab4",
      "transactionHash": "0x2d96ccb88983ba99546ac770abafd83a655a5dbcd856eda418d8ce791e941791"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0x9b338DDA876aFBf5F9C569399C052e58C282dc8C",
      "transactionHash": "0x06ce0671681ef5ae2424d85107fe4b80fa167ba7f0fffb546855814ff0276ad7"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0d0Ea2E7b2cdB019AA959aE7A91443Df503a1Aa9",
      "transactionHash": "0x383a202ba35cd920223dea6c1c63d3643e2a25896a868d1a8b80255e31f44921"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-03-23T14:20:00.100Z",
  "devdoc": {
    "author": "Bryson Kruk Design and Development",
    "details": "The main EcoAllies Contract, keeps track of all allies.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Required for ERC-721 comliance"
      },
      "balanceOf(address)": {
        "details": "Required for ERC-721 compliance"
      },
      "ownerOf(uint256)": {
        "details": "Required for ERC-721 compliance"
      },
      "setNewAddress(address)": {
        "details": "Used to mark the smart contract as upgraded, in case there is a serious breaking bug. This method does nothing but keep track of the new contract and emit a message indicating that the new address is set. It's up to the clients of the contract to update to the new contract address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)",
        "params": {
          "_v2Address": "new address"
        }
      },
      "tokensOfOwner(address)": {
        "details": "This method MUST NEVER be called by smart contract code. First, it's fairly  expensive (it walks the entire EcoAlly array looking for cats belonging to owner),  but it also returns a dynamic array, which is only supported for web3 calls, and  not contract-to-contract calls.",
        "params": {
          "_owner": "The owner whose EcoAllies we are interested in."
        }
      },
      "totalSupply()": {
        "details": "Required for ERC-721 compliance."
      },
      "transfer(address,uint256)": {
        "details": "Required for ERC-721 compliance"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Required for ERC-721 compliance"
      },
      "unpause()": {
        "details": "Override unpause so it requires all external contract addresses  to be set before contract can be unpaused. Also, we can't have  newContractAddress set either, because then the contract was upgraded."
      }
    },
    "title": "EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain."
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "Grants another address the right to transfer a specific EcoAlly via transferFrom(). This is the prefered flow for transfering NFTs to contracts."
      },
      "balanceOf(address)": {
        "notice": "returns the number of EcoAllies currently assigned to a specified address"
      },
      "constructor": "Creates the main EcoAllies smart contract instance.",
      "getEcoAlly(uint256)": {
        "notice": "Returns all the relevant information about a specific EcoAlly."
      },
      "ownerOf(uint256)": {
        "notice": "Returns the address currently assigned to this token ID"
      },
      "tokensOfOwner(address)": {
        "notice": "Returns a list of all EcoAlly IDs assigned to an address."
      },
      "totalSupply()": {
        "notice": "Returns the total number of EcoAllies currently in existence."
      },
      "transfer(address,uint256)": {
        "notice": "Transfer an EcoAlly to another address. Make sure it's the correct address or it could be lost forever."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer an EcoAlly to another address, for which the calling address has previously been granted transfer approval by the owner."
      },
      "unpause()": {
        "notice": "This is public rather than external so we can call super.unpause  without using an expensive CALL."
      }
    }
  }
}