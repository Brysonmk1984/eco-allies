{
  "contractName": "EcoAllyCore",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ecoAllyIndexToApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ecoAllyIndexToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newContractAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "count",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "ownerTokens",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "ecoAllyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "ecoAllyDNA",
          "type": "uint256"
        }
      ],
      "name": "Creation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_v2Address",
          "type": "address"
        }
      ],
      "name": "setNewAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getEcoAlly",
      "outputs": [
        {
          "name": "dna",
          "type": "uint256"
        },
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "getEcoAllyDnaOnly",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_seed",
          "type": "uint256"
        }
      ],
      "name": "addAlly",
      "outputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_seed",
          "type": "uint256"
        }
      ],
      "name": "randDna",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferEcoAlly",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008060146101000a81548160ff0219169083151502179055506010600155600154600a0a60025534801561003857600080fd5b506001600060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061163d806100a36000396000f30060806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146101225780630a0f81681461016f57806318160ddd146101c65780631fdd0c1e146101f157806323b872dd1461023257806327d7874c1461029f5780633d1749cc146102e25780633e4bd7271461032a5780633f4ba83a146103975780634a765037146103ae5780635998b7001461041b5780635c975abb146104885780636352211e146104b75780636af04a571461052457806370a082311461057b57806371587988146105d25780638456cb59146106155780638462151c1461062c578063a9059cbb146106c4578063b15dcd5e14610711578063b6e44a771461077e575b600080fd5b34801561012e57600080fd5b5061016d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107bf565b005b34801561017b57600080fd5b5061018461089d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d257600080fd5b506101db6108c2565b6040518082815260200191505060405180910390f35b3480156101fd57600080fd5b5061021c600480360381019080803590602001909291905050506108d2565b6040518082815260200191505060405180910390f35b34801561023e57600080fd5b5061029d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108e4565b005b3480156102ab57600080fd5b506102e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109b1565b005b3480156102ee57600080fd5b5061030d60048036038101908080359060200190929190505050610a8b565b604051808381526020018281526020019250505060405180910390f35b34801561033657600080fd5b5061035560048036038101908080359060200190929190505050610ac1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103a357600080fd5b506103ac610af4565b005b3480156103ba57600080fd5b506103d960048036038101908080359060200190929190505050610bd1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042757600080fd5b50610486600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c04565b005b34801561049457600080fd5b5061049d610c14565b604051808215151515815260200191505060405180910390f35b3480156104c357600080fd5b506104e260048036038101908080359060200190929190505050610c27565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053057600080fd5b50610539610ca3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058757600080fd5b506105bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cc9565b6040518082815260200191505060405180910390f35b3480156105de57600080fd5b50610613600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d12565b005b34801561062157600080fd5b5061062a610e2f565b005b34801561063857600080fd5b5061066d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ec3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106b0578082015181840152602081019050610695565b505050509050019250505060405180910390f35b3480156106d057600080fd5b5061070f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611010565b005b34801561071d57600080fd5b5061073c600480360381019080803590602001909291905050506110c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561078a57600080fd5b506107a9600480360381019080803590602001909291905050506110d9565b6040518082815260200191505060405180910390f35b600060149054906101000a900460ff161515156107db57600080fd5b6107e53382611104565b15156107f057600080fd5b6107fa8183611170565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160038054905003905090565b60006108dd826111c6565b9050919050565b600060149054906101000a900460ff1615151561090057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561093c57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561097757600080fd5b61098133826111fb565b151561098c57600080fd5b6109968382611104565b15156109a157600080fd5b6109ac838383611267565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a0c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a4857600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000600384815481101515610a9f57fe5b9060005260206000200190508060000154925082849250829250925050915091565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b4f57600080fd5b600060149054906101000a900460ff161515610b6a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610bc757600080fd5b610bcf611469565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c0f838383611267565b505050565b600060149054906101000a900460ff1681565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610c9b57600080fd5b809050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d6d57600080fd5b600060149054906101000a900460ff161515610d8857600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e8a57600080fd5b600060149054906101000a900460ff16151515610ea657600080fd5b6001600060146101000a81548160ff021916908315150217905550565b6060600060606000806000610ed787610cc9565b94506000851415610f1a576000604051908082528060200260200182016040528015610f125781602001602082028038833980820191505090505b509550611006565b84604051908082528060200260200182016040528015610f495781602001602082028038833980820191505090505b509350610f546108c2565b925060009150600090505b8281111515611002578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ff557808483815181101515610fde57fe5b906020019060200201818152505081806001019250505b8080600101915050610f5f565b8395505b5050505050919050565b600060149054906101000a900460ff1615151561102c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561106857600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156110a357600080fd5b6110ad3382611104565b15156110b857600080fd5b6110c3338383611267565b5050565b60006110d2826114fb565b9050919050565b6000806003838154811015156110eb57fe5b9060005260206000200190508060000154915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008082604051808281526020019150506040518091039020600190049050600254818115156111f257fe5b06915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156113c557600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055506006600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114c457600080fd5b600060149054906101000a900460ff1615156114df57600080fd5b60008060146101000a81548160ff021916908315150217905550565b6000806000611509846111c6565b915060016003602060405190810160405280858152509080600181540180825580915050906001820390600052602060002001600090919290919091506000820151816000015550500390507f0c42492e9a23edb18d7a10ab834f9871ecd80970bffc97312a8a1c05b88e807d338284604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a16115d460003383611267565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925050509190505600a165627a7a723058204b41b49164021ab62fca1b672b8913bfefd12e5871783f53e6a3060ab821b3250029",
  "deployedBytecode": "0x60806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b3146101225780630a0f81681461016f57806318160ddd146101c65780631fdd0c1e146101f157806323b872dd1461023257806327d7874c1461029f5780633d1749cc146102e25780633e4bd7271461032a5780633f4ba83a146103975780634a765037146103ae5780635998b7001461041b5780635c975abb146104885780636352211e146104b75780636af04a571461052457806370a082311461057b57806371587988146105d25780638456cb59146106155780638462151c1461062c578063a9059cbb146106c4578063b15dcd5e14610711578063b6e44a771461077e575b600080fd5b34801561012e57600080fd5b5061016d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506107bf565b005b34801561017b57600080fd5b5061018461089d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101d257600080fd5b506101db6108c2565b6040518082815260200191505060405180910390f35b3480156101fd57600080fd5b5061021c600480360381019080803590602001909291905050506108d2565b6040518082815260200191505060405180910390f35b34801561023e57600080fd5b5061029d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108e4565b005b3480156102ab57600080fd5b506102e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109b1565b005b3480156102ee57600080fd5b5061030d60048036038101908080359060200190929190505050610a8b565b604051808381526020018281526020019250505060405180910390f35b34801561033657600080fd5b5061035560048036038101908080359060200190929190505050610ac1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103a357600080fd5b506103ac610af4565b005b3480156103ba57600080fd5b506103d960048036038101908080359060200190929190505050610bd1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561042757600080fd5b50610486600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610c04565b005b34801561049457600080fd5b5061049d610c14565b604051808215151515815260200191505060405180910390f35b3480156104c357600080fd5b506104e260048036038101908080359060200190929190505050610c27565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053057600080fd5b50610539610ca3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561058757600080fd5b506105bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610cc9565b6040518082815260200191505060405180910390f35b3480156105de57600080fd5b50610613600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d12565b005b34801561062157600080fd5b5061062a610e2f565b005b34801561063857600080fd5b5061066d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ec3565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106b0578082015181840152602081019050610695565b505050509050019250505060405180910390f35b3480156106d057600080fd5b5061070f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611010565b005b34801561071d57600080fd5b5061073c600480360381019080803590602001909291905050506110c7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561078a57600080fd5b506107a9600480360381019080803590602001909291905050506110d9565b6040518082815260200191505060405180910390f35b600060149054906101000a900460ff161515156107db57600080fd5b6107e53382611104565b15156107f057600080fd5b6107fa8183611170565b7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160038054905003905090565b60006108dd826111c6565b9050919050565b600060149054906101000a900460ff1615151561090057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561093c57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561097757600080fd5b61098133826111fb565b151561098c57600080fd5b6109968382611104565b15156109a157600080fd5b6109ac838383611267565b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a0c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610a4857600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806000600384815481101515610a9f57fe5b9060005260206000200190508060000154925082849250829250925050915091565b60066020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b4f57600080fd5b600060149054906101000a900460ff161515610b6a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610bc757600080fd5b610bcf611469565b565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c0f838383611267565b505050565b600060149054906101000a900460ff1681565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610c9b57600080fd5b809050919050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d6d57600080fd5b600060149054906101000a900460ff161515610d8857600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f450db8da6efbe9c22f2347f7c2021231df1fc58d3ae9a2fa75d39fa44619930581604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e8a57600080fd5b600060149054906101000a900460ff16151515610ea657600080fd5b6001600060146101000a81548160ff021916908315150217905550565b6060600060606000806000610ed787610cc9565b94506000851415610f1a576000604051908082528060200260200182016040528015610f125781602001602082028038833980820191505090505b509550611006565b84604051908082528060200260200182016040528015610f495781602001602082028038833980820191505090505b509350610f546108c2565b925060009150600090505b8281111515611002578673ffffffffffffffffffffffffffffffffffffffff166004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610ff557808483815181101515610fde57fe5b906020019060200201818152505081806001019250505b8080600101915050610f5f565b8395505b5050505050919050565b600060149054906101000a900460ff1615151561102c57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561106857600080fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156110a357600080fd5b6110ad3382611104565b15156110b857600080fd5b6110c3338383611267565b5050565b60006110d2826114fb565b9050919050565b6000806003838154811015156110eb57fe5b9060005260206000200190508060000154915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b806006600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60008082604051808281526020019150506040518091039020600190049050600254818115156111f257fe5b06915050919050565b60008273ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156113c557600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001900391905055506006600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114c457600080fd5b600060149054906101000a900460ff1615156114df57600080fd5b60008060146101000a81548160ff021916908315150217905550565b6000806000611509846111c6565b915060016003602060405190810160405280858152509080600181540180825580915050906001820390600052602060002001600090919290919091506000820151816000015550500390507f0c42492e9a23edb18d7a10ab834f9871ecd80970bffc97312a8a1c05b88e807d338284604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a16115d460003383611267565b6004600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925050509190505600a165627a7a723058204b41b49164021ab62fca1b672b8913bfefd12e5871783f53e6a3060ab821b3250029",
  "sourceMap": "262:3427:3:-;;;456:5:1;435:26;;;;;;;;;;;;;;;;;;;;668:2:2;651:19;;700:9;;694:2;:15;676:33;;1445:169:3;8:9:-1;5:2;;;30:1;27;20:12;5:2;1445:169:3;1511:4;1502:6;;:13;;;;;;;;;;;;;;;;;;1597:10;1584;;:23;;;;;;;;;;;;;;;;;;262:3427;;;;;;",
  "deployedSourceMap": "262:3427:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:366:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2765:366:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;348:25:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:25:1;;;;;;;;;;;;;;;;;;;;;;;;;;;4061:93:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4061:93:4;;;;;;;;;;;;;;;;;;;;;;;3448:106:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3448:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3336:595:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3336:595:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;553:127:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;553:127:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2482:178:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2482:178:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441:58:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1441:58:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3174:156:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3174:156:3;;;;;;1094:55:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1094:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3560:125:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3560:125:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:26:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;435:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;1679:187:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1679:187:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:33:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1337:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1434:122:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1434:122:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:161:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2067:161:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:78:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;830:78:1;;;;;;4617:877:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4617:877:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4617:877:4;;;;;;;;;;;;;;;;;2037:517;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2037:517:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3336:106:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3336:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2666:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2666:150:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:366:4;729:6:1;;;;;;;;;;;728:7;720:16;;;;;;;;2907:27:4;2913:10;2925:8;2907:5;:27::i;:::-;2899:36;;;;;;;;3014:23;3023:8;3033:3;3014:8;:23::i;:::-;3089:35;3098:10;3110:3;3115:8;3089:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2765:366;;:::o;348:25:1:-;;;;;;;;;;;;;:::o;4061:93:4:-;4105:4;4146:1;4128:9;:16;;;;:19;4121:26;;4061:93;:::o;3448:106:3:-;3500:4;3522:25;3541:5;3522:18;:25::i;:::-;3515:32;;3448:106;;;:::o;3336:595:4:-;729:6:1;;;;;;;;;;;728:7;720:16;;;;;;;;3530:1:4;3515:17;;:3;:17;;;;3507:26;;;;;;;;3643:4;3628:20;;:3;:20;;;;3620:29;;;;;;;;3717:34;3730:10;3742:8;3717:12;:34::i;:::-;3709:43;;;;;;;;3770:22;3776:5;3783:8;3770:5;:22::i;:::-;3762:31;;;;;;;;3893;3903:5;3910:3;3915:8;3893:9;:31::i;:::-;3336:595;;;:::o;553:127:1:-;518:10;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;640:1;621:21;;:7;:21;;;;613:30;;;;;;;;666:7;653:10;;:20;;;;;;;;;;;;;;;;;;553:127;:::o;2482:178:3:-;2537:11;2550:10;2573:20;2596:9;2606:3;2596:14;;;;;;;;;;;;;;;;;2573:37;;2634:4;:8;;;2628:14;;;2649:3;2644:8;;;2620:33;;;;2482:178;;;;:::o;1441:58:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;3174:156:3:-;518:10:1;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;799:6;;;;;;;;;;;791:15;;;;;;;;3267:1:3;3237:32;;:18;;;;;;;;;;;:32;;;3229:41;;;;;;;;3308:15;:13;:15::i;:::-;3174:156::o;1094:55:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;3560:125:3:-;3647:31;3657:5;3664:3;3669:8;3647:9;:31::i;:::-;3560:125;;;:::o;435:26:1:-;;;;;;;;;;;;;:::o;1679:187:4:-;1737:13;1770:19;:29;1790:8;1770:29;;;;;;;;;;;;;;;;;;;;;1762:37;;1834:1;1817:19;;:5;:19;;;;1809:28;;;;;;;;1854:5;1847:12;;1679:187;;;:::o;1337:33:3:-;;;;;;;;;;;;;:::o;1434:122:4:-;1490:13;1522:19;:27;1542:6;1522:27;;;;;;;;;;;;;;;;1515:34;;1434:122;;;:::o;2067:161:3:-;518:10:1;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;799:6;;;;;;;;;;;791:15;;;;;;;;2169:10:3;2148:18;;:31;;;;;;;;;;;;;;;;;;2194:27;2210:10;2194:27;;;;;;;;;;;;;;;;;;;;;;2067:161;:::o;830:78:1:-;518:10;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;729:6;;;;;;;;;;;728:7;720:16;;;;;;;;897:4;888:6;;:13;;;;;;;;;;;;;;;;;;830:78::o;4617:877:4:-;4678:21;4711:18;4884:23;4949:22;5001:19;5173:17;4732;4742:6;4732:9;:17::i;:::-;4711:38;;4777:1;4763:10;:15;4760:728;;;4851:1;4837:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4837:16:4;;;;4830:23;;;;4760:728;4924:10;4910:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;4910:25:4;;;;4884:51;;4974:13;:11;:13::i;:::-;4949:38;;5023:1;5001:23;;5221:1;5209:13;;5205:245;5237:14;5224:9;:27;;5205:245;;;5321:6;5287:40;;:19;:30;5307:9;5287:30;;;;;;;;;;;;;;;;;;;;;:40;;;5284:152;;;5373:9;5351:6;5358:11;5351:19;;;;;;;;;;;;;;;;;:31;;;;;5404:13;;;;;;;5284:152;5253:11;;;;;;;5205:245;;;5471:6;5464:13;;4617:877;;;;;;;;;:::o;2037:517::-;729:6:1;;;;;;;;;;;728:7;720:16;;;;;;;;2212:1:4;2197:17;;:3;:17;;;;2189:26;;;;;;;;2325:4;2310:20;;:3;:20;;;;2302:29;;;;;;;;2395:27;2401:10;2413:8;2395:5;:27::i;:::-;2387:36;;;;;;;;2511;2521:10;2533:3;2538:8;2511:9;:36::i;:::-;2037:517;;:::o;3336:106:3:-;3382:13;3414:21;3429:5;3414:14;:21::i;:::-;3407:28;;3336:106;;;:::o;2666:150::-;2728:7;2747:20;2770:9;2780:3;2770:14;;;;;;;;;;;;;;;;;2747:37;;2801:4;:8;;;2794:15;;2666:150;;;;:::o;850:147:4:-;925:4;981:9;948:42;;:19;:29;968:8;948:29;;;;;;;;;;;;;;;;;;;;;:42;;;941:49;;850:147;;;;:::o;1168:125::-;1277:9;1242:22;:32;1265:8;1242:32;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;1168:125;;:::o;1545:154:2:-;1608:4;1624:9;1651:5;1641:16;;;;;;;;;;;;;;;;;;1636:22;;;1624:34;;1682:10;;1675:4;:17;;;;;;;;1668:24;;1545:154;;;;:::o;1008::4:-;1090:4;1146:9;1113:42;;:19;:29;1133:8;1113:29;;;;;;;;;;;;;;;;;;;;;:42;;;1106:49;;1008:154;;;;:::o;1774:633:2:-;1928:19;:24;1948:3;1928:24;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;2026:3;1994:19;:29;2014:8;1994:29;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;2152:1;2135:19;;:5;:19;;;;2132:188;;;2170:19;:26;2190:5;2170:26;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;2277:22;:32;2300:8;2277:32;;;;;;;;;;;;2270:39;;;;;;;;;;;2132:188;2370:30;2379:5;2386:3;2391:8;2370:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:633;;;:::o;914:76:1:-;518:10;;;;;;;;;;;504:24;;:10;:24;;;496:33;;;;;;;;799:6;;;;;;;;;;;791:15;;;;;;;;978:5;969:6;;:14;;;;;;;;;;;;;;;;;;914:76::o;2648:472:2:-;2702:13;2727:9;2774:20;2739:25;2758:5;2739:18;:25::i;:::-;2727:37;;2828:1;2797:9;2812:13;;;;;;;;;2820:4;2812:13;;;2797:29;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2797:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;2774:55;;2886:40;2895:10;2907:12;2921:4;2886:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3024:38;3034:1;3037:10;3049:12;3024:9;:38::i;:::-;3080:19;:33;3100:12;3080:33;;;;;;;;;;;;;;;;;;;;;3073:40;;2648:472;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"./EcoAllyOwnership.sol\";\n\n/// @title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n/// @author Bryson Kruk Design and Development\n/// @dev The main EcoAllies Contract, keeps track of all allies.\ncontract EcoAllyCore is EcoAllyOwnership {\n// We break the core contract into multiple files using inheritence, one for each major\n    // facet of functionality of EcoAllies. This allows us to keep related code bundled together while still\n    // avoiding a single giant file with everything in it. The breakdown is as follows:\n    //\n    //      - EcoAllyBase: This is where we define the most fundamental code shared throughout the core\n    //             functionality. This includes our main data storage, constants and data types, plus\n    //             internal functions for managing these items.\n    //\n    //      - EcoAllyAccessControl: This contract manages the various addresses and constraints for operations\n    //             that can be executed only by the CEO.\n    //\n    //      - EcoAllyOwnership: This provides the methods required for basic non-fungible token\n    //             transactions, following the draft ERC-721 spec (https://github.com/ethereum/EIPs/issues/721).\n\n    // Set in case the core contract is broken and an upgrade is required\n    address public newContractAddress;\n\n    /// @notice Creates the main EcoAllies smart contract instance.\n    constructor() public {\n        // Starts Paused.\n        paused = true;\n\n        // The Creator of the contract is the initial CEO\n        ceoAddress = msg.sender;\n    }\n\n    /// @dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n    /// This method does nothing but keep track of the new contract and emit a message indicating\n    /// that the new address is set. It's up to the clients of the contract to update to the new contract\n    /// address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n    /// @param _v2Address new address\n    function setNewAddress(address _v2Address) external onlyCEO whenPaused {\n        newContractAddress = _v2Address;\n        emit ContractUpgrade(_v2Address);\n    }\n\n    /// @notice No tipping!\n    /// @dev Reject all Ether from being sent here, hopefully preventing user accidents\n    // function() external payable {\n     \n    // }\n\n    /// @notice Returns all the relevant information about a specific EcoAlly.\n    function getEcoAlly(uint256 _id) external view returns(uint256 dna, uint256 id ) {\n        EcoAlly storage ally = ecoAllies[_id];\n        return (dna = ally.dna, id = _id);\n    }\n\n    function getEcoAllyDnaOnly(uint256 _id) external view returns(uint256) {\n        EcoAlly storage ally = ecoAllies[_id];\n        return ally.dna;\n    }\n\n    /// @dev Override unpause so it requires all external contract addresses\n    ///  to be set before contract can be unpaused. Also, we can't have\n    ///  newContractAddress set either, because then the contract was upgraded.\n    /// @notice This is public rather than external so we can call super.unpause\n    ///  without using an expensive CALL.\n    function unpause() public onlyCEO whenPaused {\n        require(newContractAddress == address(0));\n        // Unpause contract\n        super.unpause();\n    }\n\n    function addAlly(uint _seed) external returns(address owner) {\n        return _createEcoAlly(_seed);\n    }\n\n    function randDna(uint _seed) external view returns (uint){\n        return _generateRandomDna(_seed);\n    }\n\n    function transferEcoAlly(address _from, address _to, uint _tokenId) external {\n        _transfer(_from, _to, _tokenId);\n    }\n\n\n}",
  "sourcePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyCore.sol",
  "ast": {
    "absolutePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyCore.sol",
    "exportedSymbols": {
      "EcoAllyCore": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 301,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyOwnership.sol",
        "file": "./EcoAllyOwnership.sol",
        "id": 302,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 805,
        "src": "26:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 303,
              "name": "EcoAllyOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 804,
              "src": "286:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EcoAllyOwnership_$804",
                "typeString": "contract EcoAllyOwnership"
              }
            },
            "id": 304,
            "nodeType": "InheritanceSpecifier",
            "src": "286:16:3"
          }
        ],
        "contractDependencies": [
          60,
          144,
          299,
          804
        ],
        "contractKind": "contract",
        "documentation": "@title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n @author Bryson Kruk Design and Development\n @dev The main EcoAllies Contract, keeps track of all allies.",
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441,
          804,
          60,
          299,
          144
        ],
        "name": "EcoAllyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 306,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "1337:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 305,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "1466:148:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1502:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1511:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1502:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 313,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1584:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 314,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 920,
                        "src": "1597:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1597:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:23:3"
                }
              ]
            },
            "documentation": "@notice Creates the main EcoAllies smart contract instance.",
            "id": 319,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:3"
            },
            "scope": 441,
            "src": "1445:169:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "2138:90:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 328,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "2148:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 329,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "2169:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2148:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:31:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 333,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "2210:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 332,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "2194:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "EmitStatement",
                  "src": "2189:32:3"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n This method does nothing but keep track of the new contract and emit a message indicating\n that the new address is set. It's up to the clients of the contract to update to the new contract\n address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 337,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 324,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 323,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "2119:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2119:7:3"
              },
              {
                "arguments": null,
                "id": 326,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 325,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "2127:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2127:10:3"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "2090:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2089:20:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2138:0:3"
            },
            "scope": 441,
            "src": "2067:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "2563:97:3",
              "statements": [
                {
                  "assignments": [
                    347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 347,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "2573:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 346,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 176,
                        "src": "2573:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 348,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2596:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$176_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 350,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 349,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "2606:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2596:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$176_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2573:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "2628:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 353,
                            "name": "ally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "2634:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                              "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dna",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 175,
                          "src": "2634:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2628:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 356,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "2644:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 357,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "2649:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2644:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 359,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2627:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 345,
                  "id": 360,
                  "nodeType": "Return",
                  "src": "2620:33:3"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific EcoAlly.",
            "id": 362,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 339,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "2502:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2502:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2501:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "dna",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "2537:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 344,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "2550:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2536:26:3"
            },
            "scope": 441,
            "src": "2482:178:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "2737:79:3",
              "statements": [
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 379,
                      "src": "2747:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 369,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 176,
                        "src": "2747:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 371,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2770:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$176_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 373,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 372,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "2780:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2770:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$176_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2747:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 375,
                      "name": "ally",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "2801:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "dna",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 175,
                    "src": "2801:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 368,
                  "id": 377,
                  "nodeType": "Return",
                  "src": "2794:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 379,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEcoAllyDnaOnly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2693:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2692:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2728:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2727:9:3"
            },
            "scope": 441,
            "src": "2666:150:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "3219:111:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 387,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "3237:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3267:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3259:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3259:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3237:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        923,
                        924
                      ],
                      "referencedDeclaration": 923,
                      "src": "3229:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3229:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "3229:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 394,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 944,
                        "src": "3308:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EcoAllyCore_$441",
                          "typeString": "contract super EcoAllyCore"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143,
                      "src": "3308:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3308:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "3308:15:3"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 400,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 382,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 381,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "3200:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3200:7:3"
              },
              {
                "arguments": null,
                "id": 384,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 383,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "3208:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3208:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3190:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3219:0:3"
            },
            "scope": 441,
            "src": "3174:156:3",
            "stateMutability": "nonpayable",
            "superFunction": 143,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "3397:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "_seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "3429:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 407,
                      "name": "_createEcoAlly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3414:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) returns (address)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 406,
                  "id": 410,
                  "nodeType": "Return",
                  "src": "3407:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 412,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "name": "_seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "3353:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3353:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3352:12:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "3382:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3381:15:3"
            },
            "scope": 441,
            "src": "3336:106:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 423,
              "nodeType": "Block",
              "src": "3505:49:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "_seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "3541:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 419,
                      "name": "_generateRandomDna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "3522:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 418,
                  "id": 422,
                  "nodeType": "Return",
                  "src": "3515:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 424,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "randDna",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "name": "_seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "3465:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3465:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3464:12:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "3500:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3499:6:3"
            },
            "scope": 441,
            "src": "3448:106:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "3637:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "3657:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 435,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "3664:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "3669:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 433,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "3647:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3647:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "3647:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 440,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3585:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3585:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 428,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3600:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 430,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3613:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3613:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3584:43:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3637:0:3"
            },
            "scope": 441,
            "src": "3560:125:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 442,
        "src": "262:3427:3"
      }
    ],
    "src": "0:3689:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyCore.sol",
    "exportedSymbols": {
      "EcoAllyCore": [
        441
      ]
    },
    "id": 442,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 301,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/brysonkruk/Documents/projects/eco-allies/contracts/EcoAllyOwnership.sol",
        "file": "./EcoAllyOwnership.sol",
        "id": 302,
        "nodeType": "ImportDirective",
        "scope": 442,
        "sourceUnit": 805,
        "src": "26:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 303,
              "name": "EcoAllyOwnership",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 804,
              "src": "286:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EcoAllyOwnership_$804",
                "typeString": "contract EcoAllyOwnership"
              }
            },
            "id": 304,
            "nodeType": "InheritanceSpecifier",
            "src": "286:16:3"
          }
        ],
        "contractDependencies": [
          60,
          144,
          299,
          804
        ],
        "contractKind": "contract",
        "documentation": "@title EcoAllies: Collectable Environmental super heroes  on the Ethereum blockchain.\n @author Bryson Kruk Design and Development\n @dev The main EcoAllies Contract, keeps track of all allies.",
        "fullyImplemented": true,
        "id": 441,
        "linearizedBaseContracts": [
          441,
          804,
          60,
          299,
          144
        ],
        "name": "EcoAllyCore",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 306,
            "name": "newContractAddress",
            "nodeType": "VariableDeclaration",
            "scope": 441,
            "src": "1337:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 305,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1337:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 318,
              "nodeType": "Block",
              "src": "1466:148:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 309,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1502:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1511:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1502:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 313,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "1584:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 314,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 920,
                        "src": "1597:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1597:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1584:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 317,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:23:3"
                }
              ]
            },
            "documentation": "@notice Creates the main EcoAllies smart contract instance.",
            "id": 319,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1456:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1466:0:3"
            },
            "scope": 441,
            "src": "1445:169:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 336,
              "nodeType": "Block",
              "src": "2138:90:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 328,
                      "name": "newContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "2148:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 329,
                      "name": "_v2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 321,
                      "src": "2169:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2148:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:31:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 333,
                        "name": "_v2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 321,
                        "src": "2210:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 332,
                      "name": "ContractUpgrade",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "2194:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2194:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 335,
                  "nodeType": "EmitStatement",
                  "src": "2189:32:3"
                }
              ]
            },
            "documentation": "@dev Used to mark the smart contract as upgraded, in case there is a serious breaking bug.\n This method does nothing but keep track of the new contract and emit a message indicating\n that the new address is set. It's up to the clients of the contract to update to the new contract\n address in that case. (This contract will be paused indefinitely if such an upgrade takes place.)\n @param _v2Address new address",
            "id": 337,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 324,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 323,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "2119:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2119:7:3"
              },
              {
                "arguments": null,
                "id": 326,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 325,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "2127:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2127:10:3"
              }
            ],
            "name": "setNewAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 322,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 321,
                  "name": "_v2Address",
                  "nodeType": "VariableDeclaration",
                  "scope": 337,
                  "src": "2090:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2089:20:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2138:0:3"
            },
            "scope": 441,
            "src": "2067:161:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "2563:97:3",
              "statements": [
                {
                  "assignments": [
                    347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 347,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "2573:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 346,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 176,
                        "src": "2573:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 351,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 348,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2596:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$176_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 350,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 349,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "2606:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2596:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$176_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2573:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 352,
                          "name": "dna",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 342,
                          "src": "2628:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 353,
                            "name": "ally",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "2634:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                              "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                            }
                          },
                          "id": 354,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "dna",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 175,
                          "src": "2634:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2628:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "argumentTypes": null,
                          "id": 356,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 344,
                          "src": "2644:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "argumentTypes": null,
                          "id": 357,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 339,
                          "src": "2649:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2644:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 359,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2627:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 345,
                  "id": 360,
                  "nodeType": "Return",
                  "src": "2620:33:3"
                }
              ]
            },
            "documentation": "@notice Returns all the relevant information about a specific EcoAlly.",
            "id": 362,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 339,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "2502:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2502:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2501:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "name": "dna",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "2537:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2537:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 344,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "2550:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2536:26:3"
            },
            "scope": 441,
            "src": "2482:178:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 378,
              "nodeType": "Block",
              "src": "2737:79:3",
              "statements": [
                {
                  "assignments": [
                    370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 370,
                      "name": "ally",
                      "nodeType": "VariableDeclaration",
                      "scope": 379,
                      "src": "2747:20:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 369,
                        "name": "EcoAlly",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 176,
                        "src": "2747:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                          "typeString": "struct EcoAllyBase.EcoAlly"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 374,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 371,
                      "name": "ecoAllies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "2770:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EcoAlly_$176_storage_$dyn_storage",
                        "typeString": "struct EcoAllyBase.EcoAlly storage ref[] storage ref"
                      }
                    },
                    "id": 373,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 372,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "2780:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2770:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EcoAlly_$176_storage",
                      "typeString": "struct EcoAllyBase.EcoAlly storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2747:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 375,
                      "name": "ally",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 370,
                      "src": "2801:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EcoAlly_$176_storage_ptr",
                        "typeString": "struct EcoAllyBase.EcoAlly storage pointer"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "dna",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 175,
                    "src": "2801:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 368,
                  "id": 377,
                  "nodeType": "Return",
                  "src": "2794:15:3"
                }
              ]
            },
            "documentation": null,
            "id": 379,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getEcoAllyDnaOnly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 364,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2693:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2693:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2692:13:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 379,
                  "src": "2728:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2727:9:3"
            },
            "scope": 441,
            "src": "2666:150:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "3219:111:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 387,
                          "name": "newContractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "3237:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3267:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3259:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3259:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3237:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        923,
                        924
                      ],
                      "referencedDeclaration": 923,
                      "src": "3229:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3229:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 393,
                  "nodeType": "ExpressionStatement",
                  "src": "3229:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 394,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 944,
                        "src": "3308:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_EcoAllyCore_$441",
                          "typeString": "contract super EcoAllyCore"
                        }
                      },
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 143,
                      "src": "3308:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3308:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "3308:15:3"
                }
              ]
            },
            "documentation": "@dev Override unpause so it requires all external contract addresses\n  to be set before contract can be unpaused. Also, we can't have\n  newContractAddress set either, because then the contract was upgraded.\n @notice This is public rather than external so we can call super.unpause\n  without using an expensive CALL.",
            "id": 400,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 382,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 381,
                  "name": "onlyCEO",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 82,
                  "src": "3200:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3200:7:3"
              },
              {
                "arguments": null,
                "id": 384,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 383,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "3208:10:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3208:10:3"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3190:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3219:0:3"
            },
            "scope": 441,
            "src": "3174:156:3",
            "stateMutability": "nonpayable",
            "superFunction": 143,
            "visibility": "public"
          },
          {
            "body": {
              "id": 411,
              "nodeType": "Block",
              "src": "3397:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 408,
                        "name": "_seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "3429:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 407,
                      "name": "_createEcoAlly",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 298,
                      "src": "3414:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) returns (address)"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3414:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 406,
                  "id": 410,
                  "nodeType": "Return",
                  "src": "3407:28:3"
                }
              ]
            },
            "documentation": null,
            "id": 412,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "addAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "name": "_seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "3353:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3353:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3352:12:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 405,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 412,
                  "src": "3382:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3382:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3381:15:3"
            },
            "scope": 441,
            "src": "3336:106:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 423,
              "nodeType": "Block",
              "src": "3505:49:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 420,
                        "name": "_seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 414,
                        "src": "3541:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 419,
                      "name": "_generateRandomDna",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 211,
                      "src": "3522:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 418,
                  "id": 422,
                  "nodeType": "Return",
                  "src": "3515:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 424,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "randDna",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 414,
                  "name": "_seed",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "3465:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3465:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3464:12:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 424,
                  "src": "3500:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3500:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3499:6:3"
            },
            "scope": 441,
            "src": "3448:106:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 439,
              "nodeType": "Block",
              "src": "3637:48:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 434,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 426,
                        "src": "3657:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 435,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 428,
                        "src": "3664:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 430,
                        "src": "3669:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 433,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "3647:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3647:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 438,
                  "nodeType": "ExpressionStatement",
                  "src": "3647:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 440,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferEcoAlly",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 426,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3585:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3585:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 428,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3600:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 427,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 430,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 440,
                  "src": "3613:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 429,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3613:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3584:43:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3637:0:3"
            },
            "scope": 441,
            "src": "3560:125:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 442,
        "src": "262:3427:3"
      }
    ],
    "src": "0:3689:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x7912fa1a0a94f8d403278942822ca31615ea9ab4",
      "transactionHash": "0x2d96ccb88983ba99546ac770abafd83a655a5dbcd856eda418d8ce791e941791"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0d0ea2e7b2cdb019aa959ae7a91443df503a1aa9",
      "transactionHash": "0xbe0e78c04effe6744d2eb95959431ee1b04945f9aef85f1d38a81ba12d933184"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-02-02T00:16:32.728Z"
}